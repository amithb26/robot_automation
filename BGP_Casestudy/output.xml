<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20161230 15:39:00.218" generator="Robot 3.0 (Python 2.7.12 on linux2)">
<suite source="/home/guccha/robot_automation/BGP_Casestudy/BGP.robot" id="s1" name="BGP">
<kw type="setup" name="Setup Actions" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Setup Actions done here</arg>
</arguments>
<status status="PASS" endtime="20161230 15:39:00.269" starttime="20161230 15:39:00.269"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>connect_all</arg>
<arg>enable</arg>
</arguments>
<kw name="Connect All" library="setup_actions">
<arguments>
<arg>enable</arg>
</arguments>
<msg timestamp="20161230 15:58:15.495" level="INFO">Telnet connection established with device R4
Device R4 is booting
Device R4 in user mode
2
Setting the password and hostname

Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device4 
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#enable password router4
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Hostname and Password set for R4
EOF or Timeout reached,no expected prompt found
Telnet connection established with device R5
Device R5 is booting
Device R5 in user mode
2
Setting the password and hostname

Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device5 
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#enable password router5
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Hostname and Password set for R5
EOF or Timeout reached,no expected prompt found
Telnet connection established with device R1
Device R1 is booting
Device R1 in user mode
2
Setting the password and hostname

Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device1 
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#enable password router1
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Hostname and Password set for R1
EOF or Timeout reached,no expected prompt found
Telnet connection established with device R2
Device R2 is booting
Device R2 in user mode
2
Setting the password and hostname

Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device2 
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#enable password router2
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Hostname and Password set for R2
EOF or Timeout reached,no expected prompt found
Telnet connection established with device R3
Device R3 is booting
Device R3 in user mode
2
Setting the password and hostname

Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device3 
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#enable password router3
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Hostname and Password set for R3
EOF or Timeout reached,no expected prompt found</msg>
<status status="PASS" endtime="20161230 15:58:15.496" starttime="20161230 15:39:00.270"></status>
</kw>
<status status="PASS" endtime="20161230 15:58:15.496" starttime="20161230 15:39:00.269"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Initial setup completed</arg>
</arguments>
<status status="PASS" endtime="20161230 15:58:15.496" starttime="20161230 15:58:15.496"></status>
</kw>
<status status="PASS" endtime="20161230 15:58:15.497" starttime="20161230 15:39:00.268"></status>
</kw>
<test id="s1-t1" name="Bring_up Phase">
<kw name="Configure IP addresses as per the topology" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
</arguments>
<status status="PASS" endtime="20161230 15:58:15.498" starttime="20161230 15:58:15.498"></status>
</kw>
<status status="PASS" endtime="20161230 15:58:15.498" starttime="20161230 15:58:15.497"></status>
</kw>
<kw name="Configure ip address" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
</arguments>
<status status="PASS" endtime="20161230 15:58:15.499" starttime="20161230 15:58:15.498"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R1</arg>
<arg>${Links_of_R1}</arg>
<arg>configure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R1</arg>
<arg>${Links_of_R1}</arg>
<arg>configure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:00:46.136" level="INFO">flag=0
Connection established with R1
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode
flag=1

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#interface f0/0
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#ip address 192.168.23.3  255.255.255.0 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#no shutdown
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
IP address of  f0/0 interface of device R1  set

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#interface f1/1
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#ip address 192.168.34.3  255.255.255.0 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#no shutdown
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
IP address of  f1/1 interface of device R1  set</msg>
<msg timestamp="20161230 16:00:46.136" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:00:46.136" starttime="20161230 15:58:15.499"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:00:46.138" starttime="20161230 16:00:46.137"></status>
</kw>
<status status="PASS" endtime="20161230 16:00:46.138" starttime="20161230 15:58:15.499"></status>
</kw>
<status status="PASS" endtime="20161230 16:00:46.138" starttime="20161230 15:58:15.499"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R1</arg>
</arguments>
<status status="PASS" endtime="20161230 16:00:46.138" starttime="20161230 16:00:46.138"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R2</arg>
<arg>${Links_of_R2}</arg>
<arg>configure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R2</arg>
<arg>${Links_of_R2}</arg>
<arg>configure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:03:17.285" level="INFO">flag=0
Connection established with R2
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode
flag=1

Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#interface f0/0
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#ip address 192.168.23.2  255.255.255.0 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#no shutdown
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
IP address of  f0/0 interface of device R2  set

Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#interface f1/0
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#ip address 192.168.12.2  255.255.255.0 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#no shutdown
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
IP address of  f1/0 interface of device R2  set</msg>
<msg timestamp="20161230 16:03:17.285" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:03:17.285" starttime="20161230 16:00:46.139"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:03:17.288" starttime="20161230 16:03:17.286"></status>
</kw>
<status status="PASS" endtime="20161230 16:03:17.288" starttime="20161230 16:00:46.139"></status>
</kw>
<status status="PASS" endtime="20161230 16:03:17.288" starttime="20161230 16:00:46.138"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R2</arg>
</arguments>
<status status="PASS" endtime="20161230 16:03:17.289" starttime="20161230 16:03:17.288"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R3</arg>
<arg>${Links_of_R3}</arg>
<arg>configure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R3</arg>
<arg>${Links_of_R3}</arg>
<arg>configure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:05:47.538" level="INFO">flag=0
Connection established with R3
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode
flag=1

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#interface f0/0
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#ip address 192.168.34.4  255.255.255.0 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#no shutdown
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
IP address of  f0/0 interface of device R3  set

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#interface f1/0
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#ip address 192.168.45.4  255.255.255.0 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#no shutdown
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
IP address of  f1/0 interface of device R3  set</msg>
<msg timestamp="20161230 16:05:47.539" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:05:47.539" starttime="20161230 16:03:17.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:05:47.540" starttime="20161230 16:05:47.539"></status>
</kw>
<status status="PASS" endtime="20161230 16:05:47.541" starttime="20161230 16:03:17.289"></status>
</kw>
<status status="PASS" endtime="20161230 16:05:47.541" starttime="20161230 16:03:17.289"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R3</arg>
</arguments>
<status status="PASS" endtime="20161230 16:05:47.541" starttime="20161230 16:05:47.541"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R4</arg>
<arg>${Links_of_R4}</arg>
<arg>configure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R4</arg>
<arg>${Links_of_R4}</arg>
<arg>configure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:07:09.387" level="INFO">flag=0
Connection established with R4
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode
flag=1

Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#interface f0/0
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#ip address 192.168.12.1  255.255.255.0 
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#no shutdown
Device4(config-if)#no shutdown 
Device4(config-if)#no shutdown 
Device4(config-if)#no shutdown 
Device4(config-if)#no shutdown 
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
IP address of  f0/0 interface of device R4  set</msg>
<msg timestamp="20161230 16:07:09.387" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:07:09.387" starttime="20161230 16:05:47.542"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:07:09.388" starttime="20161230 16:07:09.387"></status>
</kw>
<status status="PASS" endtime="20161230 16:07:09.389" starttime="20161230 16:05:47.542"></status>
</kw>
<status status="PASS" endtime="20161230 16:07:09.389" starttime="20161230 16:05:47.541"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R4</arg>
</arguments>
<status status="PASS" endtime="20161230 16:07:09.389" starttime="20161230 16:07:09.389"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R5</arg>
<arg>${Links_of_R5}</arg>
<arg>configure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R5</arg>
<arg>${Links_of_R5}</arg>
<arg>configure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:08:30.991" level="INFO">flag=0
Connection established with R5
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode
flag=1

Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#interface f0/0
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#ip address 192.168.45.5  255.255.255.0 
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#no shutdown
Device5(config-if)#no shutdown 
Device5(config-if)#no shutdown 
Device5(config-if)#no shutdown 
Device5(config-if)#no shutdown 
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
IP address of  f0/0 interface of device R5  set</msg>
<msg timestamp="20161230 16:08:30.992" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:08:30.992" starttime="20161230 16:07:09.390"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:08:30.993" starttime="20161230 16:08:30.992"></status>
</kw>
<status status="PASS" endtime="20161230 16:08:30.993" starttime="20161230 16:07:09.390"></status>
</kw>
<status status="PASS" endtime="20161230 16:08:30.993" starttime="20161230 16:07:09.389"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R5</arg>
</arguments>
<status status="PASS" endtime="20161230 16:08:30.994" starttime="20161230 16:08:30.994"></status>
</kw>
<status status="PASS" endtime="20161230 16:08:30.994" starttime="20161230 15:58:15.498"></status>
</kw>
<kw name="Set loopback interface" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
</arguments>
<status status="PASS" endtime="20161230 16:08:30.995" starttime="20161230 16:08:30.994"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
<arg>R1</arg>
<arg>set</arg>
</arguments>
<kw name="Setting Loopback interface" library="Resource">
<arguments>
<arg>R1</arg>
<arg>set</arg>
</arguments>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:10:15.012" level="INFO">flag=2
Connection established with R1
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#interface loopback0
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#end
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
IP address of  loopback interface of device R1  set</msg>
<msg timestamp="20161230 16:10:15.012" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:10:15.012" starttime="20161230 16:08:30.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:10:15.013" starttime="20161230 16:10:15.012"></status>
</kw>
<status status="PASS" endtime="20161230 16:10:15.014" starttime="20161230 16:08:30.995"></status>
</kw>
<status status="PASS" endtime="20161230 16:10:15.014" starttime="20161230 16:08:30.995"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R1</arg>
</arguments>
<status status="PASS" endtime="20161230 16:10:15.014" starttime="20161230 16:10:15.014"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
<arg>R2</arg>
<arg>set</arg>
</arguments>
<kw name="Setting Loopback interface" library="Resource">
<arguments>
<arg>R2</arg>
<arg>set</arg>
</arguments>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:12:00.357" level="INFO">flag=2
Connection established with R2
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode

Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#interface loopback0
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#end
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
IP address of  loopback interface of device R2  set</msg>
<msg timestamp="20161230 16:12:00.357" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:12:00.357" starttime="20161230 16:10:15.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:12:00.359" starttime="20161230 16:12:00.357"></status>
</kw>
<status status="PASS" endtime="20161230 16:12:00.359" starttime="20161230 16:10:15.015"></status>
</kw>
<status status="PASS" endtime="20161230 16:12:00.359" starttime="20161230 16:10:15.014"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R2</arg>
</arguments>
<status status="PASS" endtime="20161230 16:12:00.359" starttime="20161230 16:12:00.359"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
<arg>R3</arg>
<arg>set</arg>
</arguments>
<kw name="Setting Loopback interface" library="Resource">
<arguments>
<arg>R3</arg>
<arg>set</arg>
</arguments>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:13:44.722" level="INFO">flag=2
Connection established with R3
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#interface loopback0
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#end
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
IP address of  loopback interface of device R3  set</msg>
<msg timestamp="20161230 16:13:44.722" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:13:44.722" starttime="20161230 16:12:00.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:13:44.724" starttime="20161230 16:13:44.723"></status>
</kw>
<status status="PASS" endtime="20161230 16:13:44.724" starttime="20161230 16:12:00.360"></status>
</kw>
<status status="PASS" endtime="20161230 16:13:44.724" starttime="20161230 16:12:00.359"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R3</arg>
</arguments>
<status status="PASS" endtime="20161230 16:13:44.724" starttime="20161230 16:13:44.724"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
<arg>R4</arg>
<arg>set</arg>
</arguments>
<kw name="Setting Loopback interface" library="Resource">
<arguments>
<arg>R4</arg>
<arg>set</arg>
</arguments>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:15:30.101" level="INFO">flag=0
Connection established with R4
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode

Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#interface loopback0
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#end
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
IP address of  loopback interface of device R4  set</msg>
<msg timestamp="20161230 16:15:30.101" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:15:30.101" starttime="20161230 16:13:44.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:15:30.103" starttime="20161230 16:15:30.102"></status>
</kw>
<status status="PASS" endtime="20161230 16:15:30.104" starttime="20161230 16:13:44.725"></status>
</kw>
<status status="PASS" endtime="20161230 16:15:30.104" starttime="20161230 16:13:44.725"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R4</arg>
</arguments>
<status status="PASS" endtime="20161230 16:15:30.104" starttime="20161230 16:15:30.104"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
<arg>R5</arg>
<arg>set</arg>
</arguments>
<kw name="Setting Loopback interface" library="Resource">
<arguments>
<arg>R5</arg>
<arg>set</arg>
</arguments>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:16:51.305" level="INFO">flag=0
Connection established with R5
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode

Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#interface loopback0
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#end
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
IP address of  loopback interface of device R5  set</msg>
<msg timestamp="20161230 16:16:51.305" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:16:51.305" starttime="20161230 16:15:30.105"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:16:51.306" starttime="20161230 16:16:51.305"></status>
</kw>
<status status="PASS" endtime="20161230 16:16:51.307" starttime="20161230 16:15:30.105"></status>
</kw>
<status status="PASS" endtime="20161230 16:16:51.307" starttime="20161230 16:15:30.105"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R5</arg>
</arguments>
<status status="PASS" endtime="20161230 16:16:51.307" starttime="20161230 16:16:51.307"></status>
</kw>
<status status="PASS" endtime="20161230 16:16:51.307" starttime="20161230 16:08:30.994"></status>
</kw>
<kw name="Configure OSPF within AS2 to advertise the connected networks" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Configuring OSPF</arg>
</arguments>
<status status="PASS" endtime="20161230 16:16:51.308" starttime="20161230 16:16:51.308"></status>
</kw>
<status status="PASS" endtime="20161230 16:16:51.308" starttime="20161230 16:16:51.307"></status>
</kw>
<kw name="Enable OSPF in devices present in AS2 and set the ospf neighbors" library="Resource">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring_ospf</arg>
<arg>R1</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R1}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configuring_ospf" library="Resource">
<arguments>
<arg>R1</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R1}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configure Ospf" library="OSPF">
<arguments>
<arg>${device}</arg>
<arg>${process_id}</arg>
<arg>${network_connected}</arg>
<arg>${area}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:21:49.308" level="INFO">flag=3
Connection established with R1
flag=2
flag1=0
pwd not sent
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode
flag =1
192.168.23.0  0.0.0.255

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#router ospf 1
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#network 192.168.23.0  0.0.0.255 area 0 
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
R1 advertises 'I AM CONNECTED TO 192.168.23.0  0.0.0.255 NETWORK'
192.168.34.0  0.0.0.255

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#router ospf 1
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#network 192.168.34.0  0.0.0.255 area 0 
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
R1 advertises 'I AM CONNECTED TO 192.168.34.0  0.0.0.255 NETWORK'
3.3.3.0  0.0.0.255

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#router ospf 1
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#network 3.3.3.0  0.0.0.255 area 0 
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
R1 advertises 'I AM CONNECTED TO 3.3.3.0  0.0.0.255 NETWORK'
OSPF enabled &amp; neighbors set in R1</msg>
<msg timestamp="20161230 16:21:49.309" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:21:49.309" starttime="20161230 16:16:51.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ospf on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:21:49.311" starttime="20161230 16:21:49.309"></status>
</kw>
<status status="PASS" endtime="20161230 16:21:49.311" starttime="20161230 16:16:51.309"></status>
</kw>
<status status="PASS" endtime="20161230 16:21:49.311" starttime="20161230 16:16:51.309"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>OSPF configured in R1</arg>
</arguments>
<status status="PASS" endtime="20161230 16:21:49.312" starttime="20161230 16:21:49.312"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring_ospf</arg>
<arg>R2</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R2}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configuring_ospf" library="Resource">
<arguments>
<arg>R2</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R2}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configure Ospf" library="OSPF">
<arguments>
<arg>${device}</arg>
<arg>${process_id}</arg>
<arg>${network_connected}</arg>
<arg>${area}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:24:22.922" level="INFO">flag=3
Connection established with R2
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode
flag =1
192.168.23.0  0.0.0.255

Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router ospf 1
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#network 192.168.23.0  0.0.0.255 area 0 
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
R2 advertises 'I AM CONNECTED TO 192.168.23.0  0.0.0.255 NETWORK'
2.2.2.0  0.0.0.255

*Dec 30 16:22:51.495: %OSPF-5-ADJCHG: Process 1, Nbr 3.3.3.3 on FastEthernet0/0 from LOADING to FULL, Loading Done
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router ospf 1
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#network 2.2.2.0  0.0.0.255 area 0 
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
R2 advertises 'I AM CONNECTED TO 2.2.2.0  0.0.0.255 NETWORK'
OSPF enabled &amp; neighbors set in R2</msg>
<msg timestamp="20161230 16:24:22.923" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:24:22.923" starttime="20161230 16:21:49.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ospf on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:24:22.924" starttime="20161230 16:24:22.923"></status>
</kw>
<status status="PASS" endtime="20161230 16:24:22.925" starttime="20161230 16:21:49.312"></status>
</kw>
<status status="PASS" endtime="20161230 16:24:22.925" starttime="20161230 16:21:49.312"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>OSPF configured in R2</arg>
</arguments>
<status status="PASS" endtime="20161230 16:24:22.925" starttime="20161230 16:24:22.925"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring_ospf</arg>
<arg>R3</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R3}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configuring_ospf" library="Resource">
<arguments>
<arg>R3</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R3}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configure Ospf" library="OSPF">
<arguments>
<arg>${device}</arg>
<arg>${process_id}</arg>
<arg>${network_connected}</arg>
<arg>${area}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:27:18.591" level="INFO">flag=3
Connection established with R3
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode
flag =1
192.168.34.0  0.0.0.255

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router ospf 1
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#network 192.168.34.0  0.0.0.255 area 0 
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
R3 advertises 'I AM CONNECTED TO 192.168.34.0  0.0.0.255 NETWORK'
4.4.4.0  0.0.0.255

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router ospf 1
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#network 4.4.4.0  0.0.0.255 area 0 
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
R3 advertises 'I AM CONNECTED TO 4.4.4.0  0.0.0.255 NETWORK'
OSPF enabled &amp; neighbors set in R3</msg>
<msg timestamp="20161230 16:27:18.592" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:27:18.592" starttime="20161230 16:24:22.926"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ospf on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:27:18.593" starttime="20161230 16:27:18.592"></status>
</kw>
<status status="PASS" endtime="20161230 16:27:18.593" starttime="20161230 16:24:22.926"></status>
</kw>
<status status="PASS" endtime="20161230 16:27:18.594" starttime="20161230 16:24:22.925"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>OSPF configured in R3</arg>
</arguments>
<status status="PASS" endtime="20161230 16:27:18.594" starttime="20161230 16:27:18.594"></status>
</kw>
<status status="PASS" endtime="20161230 16:27:18.594" starttime="20161230 16:16:51.308"></status>
</kw>
<kw name="Configure IBGP and source the BGP updates from the loopback0 interfaces" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Setting IBGP between R2 and R3</arg>
</arguments>
<status status="PASS" endtime="20161230 16:27:18.595" starttime="20161230 16:27:18.595"></status>
</kw>
<status status="PASS" endtime="20161230 16:27:18.595" starttime="20161230 16:27:18.594"></status>
</kw>
<kw name="Enable BGP and advertise the updates from the loopback interface" library="Resource">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring_IBGP</arg>
<arg>R2</arg>
<arg>${AS_id}</arg>
<arg>${R3_interface}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configuring_IBGP" library="Resource">
<arguments>
<arg>R2</arg>
<arg>${AS_id}</arg>
<arg>${R3_interface}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configure IBGP" library="IBGP">
<arguments>
<arg>${device}</arg>
<arg>${AS_id}</arg>
<arg>${R1_interface}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:29:21.783" level="INFO">flag=3
Connection established with R2
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode
flag =1

Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router bgp 2
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#neighbor 4.4.4.4 remote-as 2
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#neighbor 4.4.4.4 update-source loopback 0
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
IBGP configured in R2</msg>
<msg timestamp="20161230 16:29:21.784" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:29:21.784" starttime="20161230 16:27:18.597"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ibgp on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:29:21.785" starttime="20161230 16:29:21.784"></status>
</kw>
<status status="PASS" endtime="20161230 16:29:21.785" starttime="20161230 16:27:18.596"></status>
</kw>
<status status="PASS" endtime="20161230 16:29:21.785" starttime="20161230 16:27:18.596"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IBGP configured in R2</arg>
</arguments>
<status status="PASS" endtime="20161230 16:29:21.786" starttime="20161230 16:29:21.786"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring_IBGP</arg>
<arg>R3</arg>
<arg>${AS_id}</arg>
<arg>${R2_interface}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configuring_IBGP" library="Resource">
<arguments>
<arg>R3</arg>
<arg>${AS_id}</arg>
<arg>${R2_interface}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configure IBGP" library="IBGP">
<arguments>
<arg>${device}</arg>
<arg>${AS_id}</arg>
<arg>${R1_interface}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20161230 16:31:25.631" level="INFO">flag=3
Connection established with R3
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode
flag =1

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router bgp 2
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#neighbor 2.2.2.2 remote-as 2
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#neighbor 2.2.2.2 update-source loopback 0
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
IBGP configured in R3</msg>
<msg timestamp="20161230 16:31:25.632" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20161230 16:31:25.632" starttime="20161230 16:29:21.787"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ibgp on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20161230 16:31:25.633" starttime="20161230 16:31:25.632"></status>
</kw>
<status status="PASS" endtime="20161230 16:31:25.633" starttime="20161230 16:29:21.786"></status>
</kw>
<status status="PASS" endtime="20161230 16:31:25.633" starttime="20161230 16:29:21.786"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IBGP configured in R3</arg>
</arguments>
<status status="PASS" endtime="20161230 16:31:25.634" starttime="20161230 16:31:25.634"></status>
</kw>
<status status="PASS" endtime="20161230 16:31:25.634" starttime="20161230 16:27:18.596"></status>
</kw>
<kw name="Enable BGP Synchronisation" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Enabling BGP synchronization</arg>
</arguments>
<status status="PASS" endtime="20161230 16:31:25.635" starttime="20161230 16:31:25.634"></status>
</kw>
<status status="PASS" endtime="20161230 16:31:25.635" starttime="20161230 16:31:25.634"></status>
</kw>
<kw name="Enable synchronisation between border routers" library="Resource">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>enable_syn</arg>
<arg>R2</arg>
<arg>${AS_id}</arg>
</arguments>
<kw name="Enable Syn" library="IBGP">
<arguments>
<arg>R2</arg>
<arg>${AS_id}</arg>
</arguments>
<msg timestamp="20161230 16:34:28.563" level="INFO">flag=3
Connection established with R2
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode
flag =1

Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router bgp 2
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#synchronization
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
BGP synchronization enabled in R2</msg>
<status status="PASS" endtime="20161230 16:34:28.564" starttime="20161230 16:31:25.636"></status>
</kw>
<status status="PASS" endtime="20161230 16:34:28.564" starttime="20161230 16:31:25.635"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>enable_syn</arg>
<arg>R3</arg>
<arg>${AS_id}</arg>
</arguments>
<kw name="Enable Syn" library="IBGP">
<arguments>
<arg>R3</arg>
<arg>${AS_id}</arg>
</arguments>
<msg timestamp="20161230 16:37:31.539" level="INFO">flag=3
Connection established with R3
flag=2
flag1=1
Successful login to a device
Device, now in priveleged mode
flag =1

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router bgp 2
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#synchronization
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
BGP synchronization enabled in R3</msg>
<status status="PASS" endtime="20161230 16:37:31.539" starttime="20161230 16:34:28.564"></status>
</kw>
<status status="PASS" endtime="20161230 16:37:31.540" starttime="20161230 16:34:28.564"></status>
</kw>
<status status="PASS" endtime="20161230 16:37:31.540" starttime="20161230 16:31:25.635"></status>
</kw>
<status status="PASS" endtime="20161230 16:37:31.540" critical="yes" starttime="20161230 15:58:15.497"></status>
</test>
<doc>A test suite with tests for configuring BGP.
Topology:-
____________________________
| R1 AS2 |
| /  |
| /  |
| R2 R3 |
|_________|________|_________|
| |
______|__ ___|______
| AS1| | AS3|
| R4 | | R5 |
|_________| |__________|
Testplan Goals:-
1. Configure IP addresses as per the topology.
2. Each Router should have a loopback0 interface.
3. Configure OSPF within AS2 to advertise the loopback0 interfaces.
Don't advertise or run OSPF on the links interconnecting AS1 and AS3.
4. Configure IBGP between R2 and R3. Source the BGP updates from the loopback0 interfaces.
5. Enable BGP synchronisation.
6. Configure EBGP between R2 and R4.
7. Configure EBGP between R3 and R5.
8. Advertise the loopback0 interfaces on R4 and R5.
9. Ensure AS1 and AS3 can communicate with each other without removing the BGP synchronisation command.</doc>
<metadata>
<item name="Version">1.0
More Info For more information about Robot Framework see http://robotframework.org
Author Payal Jain
Date 19 Dec 2016
Executed At ${HOST}
Test Framework Robot Framework Python</item>
</metadata>
<status status="PASS" endtime="20161230 16:37:31.541" starttime="20161230 15:39:00.219"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="BGP" pass="1">BGP</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
