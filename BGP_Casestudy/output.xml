<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170105 07:06:53.556" generator="Robot 3.0 (Python 2.7.12 on linux2)">
<suite source="/home/payal/robot_automation/BGP_Casestudy/BGP.robot" id="s1" name="BGP">
<kw type="setup" name="Setup Actions" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Setup Actions done here</arg>
</arguments>
<status status="PASS" endtime="20170105 07:06:53.629" starttime="20170105 07:06:53.629"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>connect_all</arg>
<arg>enable</arg>
</arguments>
<kw name="Connect All" library="setup_actions">
<arguments>
<arg>enable</arg>
</arguments>
<msg timestamp="20170105 07:25:25.385" level="INFO">Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device4 
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#enable password router4
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#

Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device5 
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#enable password router5
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#

Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device1 
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#enable password router1
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#

Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device2 
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#enable password router2
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#

Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device3 
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#enable password router3
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#</msg>
<status status="PASS" endtime="20170105 07:25:25.385" starttime="20170105 07:06:53.630"></status>
</kw>
<status status="PASS" endtime="20170105 07:25:25.386" starttime="20170105 07:06:53.629"></status>
</kw>
<status status="PASS" endtime="20170105 07:25:25.386" starttime="20170105 07:06:53.628"></status>
</kw>
<test id="s1-t1" name="Bring_up Phase">
<kw name="Configure IP addresses as per the topology" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
</arguments>
<status status="PASS" endtime="20170105 07:25:25.388" starttime="20170105 07:25:25.388"></status>
</kw>
<status status="PASS" endtime="20170105 07:25:25.388" starttime="20170105 07:25:25.387"></status>
</kw>
<kw name="Configure ip address" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
</arguments>
<status status="PASS" endtime="20170105 07:25:25.390" starttime="20170105 07:25:25.389"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>set_IP</arg>
<arg>R1</arg>
<arg>${Links_of_R1}</arg>
<arg>configure</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set IP" library="Devices">
<arguments>
<arg>R1</arg>
<arg>${Links_of_R1}</arg>
<arg>configure</arg>
</arguments>
<msg timestamp="20170105 07:27:57.989" level="INFO">
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#interface f0/0
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#ip address 192.168.23.3  255.255.255.0 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#no shutdown
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#interface f0/1
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#ip address 192.168.34.3  255.255.255.0 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#no shutdown
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#</msg>
<status status="PASS" endtime="20170105 07:27:57.989" starttime="20170105 07:25:25.391"></status>
</kw>
<msg timestamp="20170105 07:27:57.990" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:27:57.990" starttime="20170105 07:25:25.390"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:27:57.992" starttime="20170105 07:27:57.990"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R1</arg>
</arguments>
<status status="PASS" endtime="20170105 07:27:57.993" starttime="20170105 07:27:57.993"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>set_IP</arg>
<arg>R2</arg>
<arg>${Links_of_R2}</arg>
<arg>configure</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set IP" library="Devices">
<arguments>
<arg>R2</arg>
<arg>${Links_of_R2}</arg>
<arg>configure</arg>
</arguments>
<msg timestamp="20170105 07:30:30.119" level="INFO">
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#interface f0/0
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#ip address 192.168.23.2  255.255.255.0 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#no shutdown
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#

Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#interface f0/1
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#ip address 192.168.12.2  255.255.255.0 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#no shutdown
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#</msg>
<status status="PASS" endtime="20170105 07:30:30.120" starttime="20170105 07:27:57.994"></status>
</kw>
<msg timestamp="20170105 07:30:30.120" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:30:30.121" starttime="20170105 07:27:57.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:30:30.123" starttime="20170105 07:30:30.121"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R2</arg>
</arguments>
<status status="PASS" endtime="20170105 07:30:30.124" starttime="20170105 07:30:30.124"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>set_IP</arg>
<arg>R3</arg>
<arg>${Links_of_R3}</arg>
<arg>configure</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set IP" library="Devices">
<arguments>
<arg>R3</arg>
<arg>${Links_of_R3}</arg>
<arg>configure</arg>
</arguments>
<msg timestamp="20170105 07:33:04.451" level="INFO">
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#interface f0/1
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#ip address 192.168.34.4  255.255.255.0 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#no shutdown
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#interface f0/0
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#ip address 192.168.45.4  255.255.255.0 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#no shutdown
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#</msg>
<status status="PASS" endtime="20170105 07:33:04.452" starttime="20170105 07:30:30.125"></status>
</kw>
<msg timestamp="20170105 07:33:04.452" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:33:04.452" starttime="20170105 07:30:30.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:33:04.455" starttime="20170105 07:33:04.453"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R3</arg>
</arguments>
<status status="PASS" endtime="20170105 07:33:04.456" starttime="20170105 07:33:04.455"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>set_IP</arg>
<arg>R4</arg>
<arg>${Links_of_R4}</arg>
<arg>configure</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set IP" library="Devices">
<arguments>
<arg>R4</arg>
<arg>${Links_of_R4}</arg>
<arg>configure</arg>
</arguments>
<msg timestamp="20170105 07:34:27.285" level="INFO">
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#interface f0/0
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#ip address 192.168.12.1  255.255.255.0 
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#no shutdown
Device4(config-if)#no shutdown 
Device4(config-if)#no shutdown 
Device4(config-if)#no shutdown 
Device4(config-if)#no shutdown 
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#</msg>
<status status="PASS" endtime="20170105 07:34:27.286" starttime="20170105 07:33:04.457"></status>
</kw>
<msg timestamp="20170105 07:34:27.286" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:34:27.286" starttime="20170105 07:33:04.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:34:27.289" starttime="20170105 07:34:27.287"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R4</arg>
</arguments>
<status status="PASS" endtime="20170105 07:34:27.290" starttime="20170105 07:34:27.289"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>set_IP</arg>
<arg>R5</arg>
<arg>${Links_of_R5}</arg>
<arg>configure</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set IP" library="Devices">
<arguments>
<arg>R5</arg>
<arg>${Links_of_R5}</arg>
<arg>configure</arg>
</arguments>
<msg timestamp="20170105 07:35:49.508" level="INFO">
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#interface f0/0
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#ip address 192.168.45.5  255.255.255.0 
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#no shutdown
Device5(config-if)#no shutdown 
Device5(config-if)#no shutdown 
Device5(config-if)#no shutdown 
Device5(config-if)#no shutdown 
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#</msg>
<status status="PASS" endtime="20170105 07:35:49.508" starttime="20170105 07:34:27.291"></status>
</kw>
<msg timestamp="20170105 07:35:49.508" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:35:49.508" starttime="20170105 07:34:27.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:35:49.511" starttime="20170105 07:35:49.509"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R5</arg>
</arguments>
<status status="PASS" endtime="20170105 07:35:49.512" starttime="20170105 07:35:49.511"></status>
</kw>
<status status="PASS" endtime="20170105 07:35:49.512" starttime="20170105 07:25:25.389"></status>
</kw>
<kw name="Set loopback interface" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
</arguments>
<status status="PASS" endtime="20170105 07:35:49.513" starttime="20170105 07:35:49.513"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>set_loopback</arg>
<arg>R1</arg>
<arg>set</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>R1</arg>
<arg>set</arg>
</arguments>
<msg timestamp="20170105 07:37:34.836" level="INFO">Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#interface loopback0
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#end
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#</msg>
<status status="PASS" endtime="20170105 07:37:34.836" starttime="20170105 07:35:49.514"></status>
</kw>
<msg timestamp="20170105 07:37:34.836" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:37:34.837" starttime="20170105 07:35:49.514"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:37:34.839" starttime="20170105 07:37:34.837"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R1</arg>
</arguments>
<status status="PASS" endtime="20170105 07:37:34.840" starttime="20170105 07:37:34.839"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>set_loopback</arg>
<arg>R2</arg>
<arg>set</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>R2</arg>
<arg>set</arg>
</arguments>
<msg timestamp="20170105 07:39:14.249" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#interface loopback0
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#end
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#</msg>
<status status="PASS" endtime="20170105 07:39:14.249" starttime="20170105 07:37:34.841"></status>
</kw>
<msg timestamp="20170105 07:39:14.249" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:39:14.249" starttime="20170105 07:37:34.840"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:39:14.252" starttime="20170105 07:39:14.250"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R2</arg>
</arguments>
<status status="PASS" endtime="20170105 07:39:14.253" starttime="20170105 07:39:14.252"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>set_loopback</arg>
<arg>R3</arg>
<arg>set</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>R3</arg>
<arg>set</arg>
</arguments>
<msg timestamp="20170105 07:40:53.712" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#interface loopback0
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#end
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#</msg>
<status status="PASS" endtime="20170105 07:40:53.712" starttime="20170105 07:39:14.254"></status>
</kw>
<msg timestamp="20170105 07:40:53.712" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:40:53.712" starttime="20170105 07:39:14.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:40:53.715" starttime="20170105 07:40:53.713"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R3</arg>
</arguments>
<status status="PASS" endtime="20170105 07:40:53.716" starttime="20170105 07:40:53.715"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>set_loopback</arg>
<arg>R4</arg>
<arg>set</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>R4</arg>
<arg>set</arg>
</arguments>
<msg timestamp="20170105 07:42:38.992" level="INFO">Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#interface loopback0
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#end
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#</msg>
<status status="PASS" endtime="20170105 07:42:38.992" starttime="20170105 07:40:53.717"></status>
</kw>
<msg timestamp="20170105 07:42:38.993" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:42:38.993" starttime="20170105 07:40:53.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:42:38.996" starttime="20170105 07:42:38.993"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R4</arg>
</arguments>
<status status="PASS" endtime="20170105 07:42:38.996" starttime="20170105 07:42:38.996"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>set_loopback</arg>
<arg>R5</arg>
<arg>set</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>R5</arg>
<arg>set</arg>
</arguments>
<msg timestamp="20170105 07:44:19.090" level="INFO">Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#interface loopback0
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#end
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#</msg>
<status status="PASS" endtime="20170105 07:44:19.091" starttime="20170105 07:42:38.997"></status>
</kw>
<msg timestamp="20170105 07:44:19.091" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:44:19.091" starttime="20170105 07:42:38.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:44:19.094" starttime="20170105 07:44:19.092"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R5</arg>
</arguments>
<status status="PASS" endtime="20170105 07:44:19.095" starttime="20170105 07:44:19.095"></status>
</kw>
<status status="PASS" endtime="20170105 07:44:19.096" starttime="20170105 07:35:49.512"></status>
</kw>
<kw name="Configure OSPF within AS2 to advertise the connected networks" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Configuring OSPF</arg>
</arguments>
<status status="PASS" endtime="20170105 07:44:19.097" starttime="20170105 07:44:19.097"></status>
</kw>
<status status="PASS" endtime="20170105 07:44:19.098" starttime="20170105 07:44:19.096"></status>
</kw>
<kw name="Enable OSPF in devices present in AS2 and set the ospf neighbors" library="Resource">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configure_ospf</arg>
<arg>R1</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R1}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Configure Ospf" library="OSPF">
<arguments>
<arg>R1</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R1}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<msg timestamp="20170105 07:48:23.639" level="INFO">Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#router ospf 1
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#network 192.168.23.0  0.0.0.255 area 0 
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#router ospf 1
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#network 192.168.34.0  0.0.0.255 area 0 
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#router ospf 1
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#network 3.3.3.0  0.0.0.255 area 0 
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#</msg>
<status status="PASS" endtime="20170105 07:48:23.643" starttime="20170105 07:44:19.099"></status>
</kw>
<msg timestamp="20170105 07:48:23.643" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:48:23.644" starttime="20170105 07:44:19.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ospf on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:48:23.649" starttime="20170105 07:48:23.645"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>OSPF configured in R1</arg>
</arguments>
<status status="PASS" endtime="20170105 07:48:23.651" starttime="20170105 07:48:23.650"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configure_ospf</arg>
<arg>R2</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R2}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Configure Ospf" library="OSPF">
<arguments>
<arg>R2</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R2}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<msg timestamp="20170105 07:51:19.664" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router ospf 1
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#network 192.168.23.0  0.0.0.255 area 0 
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#

Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router ospf 1
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#network 2.2.2.0  0.0.0.255 area 0 
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#</msg>
<status status="PASS" endtime="20170105 07:51:19.665" starttime="20170105 07:48:23.657"></status>
</kw>
<msg timestamp="20170105 07:51:19.665" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:51:19.665" starttime="20170105 07:48:23.652"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ospf on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:51:19.668" starttime="20170105 07:51:19.666"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>OSPF configured in R2</arg>
</arguments>
<status status="PASS" endtime="20170105 07:51:19.669" starttime="20170105 07:51:19.668"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configure_ospf</arg>
<arg>R3</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R3}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Configure Ospf" library="OSPF">
<arguments>
<arg>R3</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R3}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<msg timestamp="20170105 07:54:17.142" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router ospf 1
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#network 192.168.34.0  0.0.0.255 area 0 
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router ospf 1
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#network 4.4.4.0  0.0.0.255 area 0 
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#</msg>
<status status="PASS" endtime="20170105 07:54:17.143" starttime="20170105 07:51:19.669"></status>
</kw>
<msg timestamp="20170105 07:54:17.143" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:54:17.143" starttime="20170105 07:51:19.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ospf on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:54:17.146" starttime="20170105 07:54:17.144"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>OSPF configured in R3</arg>
</arguments>
<status status="PASS" endtime="20170105 07:54:17.146" starttime="20170105 07:54:17.146"></status>
</kw>
<status status="PASS" endtime="20170105 07:54:17.147" starttime="20170105 07:44:19.098"></status>
</kw>
<kw name="Configure IBGP and source the BGP updates from the loopback0 interfaces" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Setting IBGP between R2 and R3</arg>
</arguments>
<status status="PASS" endtime="20170105 07:54:17.148" starttime="20170105 07:54:17.148"></status>
</kw>
<status status="PASS" endtime="20170105 07:54:17.148" starttime="20170105 07:54:17.147"></status>
</kw>
<kw name="Enable IBGP and advertise the updates from the loopback interface" library="Resource">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configure_IBGP</arg>
<arg>R2</arg>
<arg>${AS_id}</arg>
<arg>${R3_interface}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Configure IBGP" library="IBGP">
<arguments>
<arg>R2</arg>
<arg>${AS_id}</arg>
<arg>${R3_interface}</arg>
<arg>enable</arg>
</arguments>
<msg timestamp="20170105 07:56:06.118" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router bgp 2
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#neighbor 4.4.4.4 remote-as 2
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#neighbor 4.4.4.4 update-source loopback 0
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#</msg>
<status status="PASS" endtime="20170105 07:56:06.119" starttime="20170105 07:54:17.150"></status>
</kw>
<msg timestamp="20170105 07:56:06.119" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:56:06.119" starttime="20170105 07:54:17.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ibgp on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:56:06.122" starttime="20170105 07:56:06.120"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IBGP configured in R2</arg>
</arguments>
<status status="PASS" endtime="20170105 07:56:06.123" starttime="20170105 07:56:06.122"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configure_IBGP</arg>
<arg>R3</arg>
<arg>${AS_id}</arg>
<arg>${R2_interface}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Configure IBGP" library="IBGP">
<arguments>
<arg>R3</arg>
<arg>${AS_id}</arg>
<arg>${R2_interface}</arg>
<arg>enable</arg>
</arguments>
<msg timestamp="20170105 07:57:49.243" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router bgp 2
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#neighbor 2.2.2.2 remote-as 2
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#neighbor 2.2.2.2 update-source loopback 0
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#</msg>
<status status="PASS" endtime="20170105 07:57:49.243" starttime="20170105 07:56:06.123"></status>
</kw>
<msg timestamp="20170105 07:57:49.244" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 07:57:49.244" starttime="20170105 07:56:06.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ibgp on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 07:57:49.247" starttime="20170105 07:57:49.244"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IBGP configured in R3</arg>
</arguments>
<status status="PASS" endtime="20170105 07:57:49.248" starttime="20170105 07:57:49.247"></status>
</kw>
<status status="PASS" endtime="20170105 07:57:49.248" starttime="20170105 07:54:17.149"></status>
</kw>
<kw name="Enable BGP Synchronisation" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Enabling BGP synchronization</arg>
</arguments>
<status status="PASS" endtime="20170105 07:57:49.250" starttime="20170105 07:57:49.249"></status>
</kw>
<status status="PASS" endtime="20170105 07:57:49.250" starttime="20170105 07:57:49.249"></status>
</kw>
<kw name="Enable synchronisation between border routers" library="Resource">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>enable_syn</arg>
<arg>R2</arg>
<arg>${AS_id}</arg>
</arguments>
<kw name="Enable Syn" library="IBGP">
<arguments>
<arg>R2</arg>
<arg>${AS_id}</arg>
</arguments>
<msg timestamp="20170105 08:00:37.201" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router bgp 2
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#synchronization
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#end
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
*Jan  5 07:59:00.983: %SYS-5-CONFIG_I: Configured from console by console</msg>
<status status="PASS" endtime="20170105 08:00:37.202" starttime="20170105 07:57:49.252"></status>
</kw>
<status status="PASS" endtime="20170105 08:00:37.202" starttime="20170105 07:57:49.251"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>enable_syn</arg>
<arg>R3</arg>
<arg>${AS_id}</arg>
</arguments>
<kw name="Enable Syn" library="IBGP">
<arguments>
<arg>R3</arg>
<arg>${AS_id}</arg>
</arguments>
<msg timestamp="20170105 08:03:25.205" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router bgp 2
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#synchronization
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#end
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
*Jan  5 08:01:48.111: %SYS-5-CONFIG_I: Configured from console by console</msg>
<status status="PASS" endtime="20170105 08:03:25.206" starttime="20170105 08:00:37.203"></status>
</kw>
<status status="PASS" endtime="20170105 08:03:25.206" starttime="20170105 08:00:37.202"></status>
</kw>
<status status="PASS" endtime="20170105 08:03:25.206" starttime="20170105 07:57:49.251"></status>
</kw>
<kw name="Configure EBGP and source the BGP updates from the loopback0 interfaces" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Configuring EBGP between devices in different autonomous systems</arg>
</arguments>
<status status="PASS" endtime="20170105 08:03:25.208" starttime="20170105 08:03:25.207"></status>
</kw>
<status status="PASS" endtime="20170105 08:03:25.208" starttime="20170105 08:03:25.207"></status>
</kw>
<kw name="Enable BGP and advertise networks connected outside the autonomous system" library="Resource">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configure_EBGP</arg>
<arg>R2</arg>
<arg>${R2_AS_id}</arg>
<arg>${R2_einterface}</arg>
<arg>${R2_neighbor_AS_id}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Configure EBGP" library="IBGP">
<arguments>
<arg>R2</arg>
<arg>${R2_AS_id}</arg>
<arg>${R2_einterface}</arg>
<arg>${R2_neighbor_AS_id}</arg>
<arg>enable</arg>
</arguments>
<msg timestamp="20170105 08:05:08.131" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router bgp 2
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#neighbor 192.168.12.1 remote-as 1
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#</msg>
<status status="PASS" endtime="20170105 08:05:08.131" starttime="20170105 08:03:25.210"></status>
</kw>
<msg timestamp="20170105 08:05:08.132" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:05:08.132" starttime="20170105 08:03:25.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ebgp on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 08:05:08.134" starttime="20170105 08:05:08.132"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>EBGP configured in R2</arg>
</arguments>
<status status="PASS" endtime="20170105 08:05:08.135" starttime="20170105 08:05:08.135"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configure_EBGP</arg>
<arg>R4</arg>
<arg>${R4_AS_id}</arg>
<arg>${R4_einterface}</arg>
<arg>${R4_neighbor_AS_id}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Configure EBGP" library="IBGP">
<arguments>
<arg>R4</arg>
<arg>${R4_AS_id}</arg>
<arg>${R4_einterface}</arg>
<arg>${R4_neighbor_AS_id}</arg>
<arg>enable</arg>
</arguments>
<msg timestamp="20170105 08:06:57.184" level="INFO">Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#router bgp 1
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#neighbor 192.168.12.2 remote-as 2
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#</msg>
<status status="PASS" endtime="20170105 08:06:57.185" starttime="20170105 08:05:08.137"></status>
</kw>
<msg timestamp="20170105 08:06:57.185" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:06:57.185" starttime="20170105 08:05:08.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ebgp on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 08:06:57.187" starttime="20170105 08:06:57.185"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>EBGP configured in R4</arg>
</arguments>
<status status="PASS" endtime="20170105 08:06:57.188" starttime="20170105 08:06:57.188"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configure_EBGP</arg>
<arg>R3</arg>
<arg>${R3_AS_id}</arg>
<arg>${R3_einterface}</arg>
<arg>${R3_neighbor_AS_id}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Configure EBGP" library="IBGP">
<arguments>
<arg>R3</arg>
<arg>${R3_AS_id}</arg>
<arg>${R3_einterface}</arg>
<arg>${R3_neighbor_AS_id}</arg>
<arg>enable</arg>
</arguments>
<msg timestamp="20170105 08:08:40.398" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router bgp 2
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#neighbor 192.168.45.5 remote-as 3
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#</msg>
<status status="PASS" endtime="20170105 08:08:40.398" starttime="20170105 08:06:57.189"></status>
</kw>
<msg timestamp="20170105 08:08:40.398" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:08:40.399" starttime="20170105 08:06:57.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ebgp on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 08:08:40.401" starttime="20170105 08:08:40.399"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>EBGP configured in R3</arg>
</arguments>
<status status="PASS" endtime="20170105 08:08:40.402" starttime="20170105 08:08:40.401"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configure_EBGP</arg>
<arg>R5</arg>
<arg>${R5_AS_id}</arg>
<arg>${R5_einterface}</arg>
<arg>${R5_neighbor_AS_id}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Configure EBGP" library="IBGP">
<arguments>
<arg>R5</arg>
<arg>${R5_AS_id}</arg>
<arg>${R5_einterface}</arg>
<arg>${R5_neighbor_AS_id}</arg>
<arg>enable</arg>
</arguments>
<msg timestamp="20170105 08:10:28.793" level="INFO">Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#router bgp 3
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#neighbor 192.168.45.4 remote-as 2
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#</msg>
<status status="PASS" endtime="20170105 08:10:28.794" starttime="20170105 08:08:40.402"></status>
</kw>
<msg timestamp="20170105 08:10:28.794" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:10:28.794" starttime="20170105 08:08:40.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ebgp on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170105 08:10:28.797" starttime="20170105 08:10:28.795"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>EBGP configured in R5</arg>
</arguments>
<status status="PASS" endtime="20170105 08:10:28.798" starttime="20170105 08:10:28.797"></status>
</kw>
<status status="PASS" endtime="20170105 08:10:28.798" starttime="20170105 08:03:25.208"></status>
</kw>
<kw name="Advertise loopback interface on AS1 and AS3" library="Resource">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>advertising_loopback</arg>
<arg>R4</arg>
<arg>${R4_AS_id}</arg>
<arg>${R4_interface}</arg>
<arg>${R4_mask}</arg>
</arguments>
<kw name="Advertising Loopback" library="IBGP">
<arguments>
<arg>R4</arg>
<arg>${R4_AS_id}</arg>
<arg>${R4_interface}</arg>
<arg>${R4_mask}</arg>
</arguments>
<msg timestamp="20170105 08:13:11.961" level="INFO">Device4#
Device4#
Device4#
Device4#
Device4#
Device4#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#router bgp 1
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#network 1.1.1.0 mask 255.255.255.0
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#
Device4(config-router)#end
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
*Jan  5 08:11:11.683: %SYS-5-CONFIG_I: Configured from console by console</msg>
<status status="PASS" endtime="20170105 08:13:11.962" starttime="20170105 08:10:28.799"></status>
</kw>
<status status="PASS" endtime="20170105 08:13:11.962" starttime="20170105 08:10:28.799"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>advertising_loopback</arg>
<arg>R5</arg>
<arg>${R5_AS_id}</arg>
<arg>${R5_interface}</arg>
<arg>${R5_mask}</arg>
</arguments>
<kw name="Advertising Loopback" library="IBGP">
<arguments>
<arg>R5</arg>
<arg>${R5_AS_id}</arg>
<arg>${R5_interface}</arg>
<arg>${R5_mask}</arg>
</arguments>
<msg timestamp="20170105 08:15:55.101" level="INFO">Device5#
Device5#
Device5#
Device5#
Device5#
Device5#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#router bgp 3
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#network 5.5.5.0 mask 255.255.255.0
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#
Device5(config-router)#end
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
*Jan  5 08:13:57.843: %SYS-5-CONFIG_I: Configured from console by console</msg>
<status status="PASS" endtime="20170105 08:15:55.102" starttime="20170105 08:13:11.963"></status>
</kw>
<status status="PASS" endtime="20170105 08:15:55.102" starttime="20170105 08:13:11.962"></status>
</kw>
<status status="PASS" endtime="20170105 08:15:55.102" starttime="20170105 08:10:28.798"></status>
</kw>
<kw name="Establish route between R2 and R3" library="Resource">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>route</arg>
<arg>R2</arg>
<arg>${R2_AS_id}</arg>
<arg>${R3_lointerface}</arg>
</arguments>
<kw name="Route" library="IBGP">
<arguments>
<arg>R2</arg>
<arg>${R2_AS_id}</arg>
<arg>${R3_lointerface}</arg>
</arguments>
<msg timestamp="20170105 08:18:43.753" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router bgp 2
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#neighbor 4.4.4.4 next-hop-self
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#end
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
*Jan  5 08:16:59.931: %SYS-5-CONFIG_I: Configured from console by console</msg>
<status status="PASS" endtime="20170105 08:18:43.754" starttime="20170105 08:15:55.104"></status>
</kw>
<status status="PASS" endtime="20170105 08:18:43.754" starttime="20170105 08:15:55.104"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>route</arg>
<arg>R3</arg>
<arg>${R3_AS_id}</arg>
<arg>${R2_lointerface}</arg>
</arguments>
<kw name="Route" library="IBGP">
<arguments>
<arg>R3</arg>
<arg>${R3_AS_id}</arg>
<arg>${R2_lointerface}</arg>
</arguments>
<msg timestamp="20170105 08:21:26.677" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router bgp 2
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#neighbor 2.2.2.2 next-hop-self
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#end
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
*Jan  5 08:19:39.923: %SYS-5-CONFIG_I: Configured from console by console</msg>
<status status="PASS" endtime="20170105 08:21:26.678" starttime="20170105 08:18:43.755"></status>
</kw>
<status status="PASS" endtime="20170105 08:21:26.678" starttime="20170105 08:18:43.755"></status>
</kw>
<status status="PASS" endtime="20170105 08:21:26.678" starttime="20170105 08:15:55.103"></status>
</kw>
<kw name="Redistribute routes from OSPF into BGP" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Redistributing routes from OSPF into BGP</arg>
</arguments>
<status status="PASS" endtime="20170105 08:21:26.680" starttime="20170105 08:21:26.680"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>redistribution</arg>
<arg>R2</arg>
<arg>${R2_AS_id}</arg>
<arg>${Process_id}</arg>
</arguments>
<kw name="Redistribution" library="IBGP">
<arguments>
<arg>R2</arg>
<arg>${R2_AS_id}</arg>
<arg>${Process_id}</arg>
</arguments>
<msg timestamp="20170105 08:24:09.598" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router ospf 1
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#redistribute bgp 2 subnets
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#end
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
*Jan  5 08:22:23.083: %SYS-5-CONFIG_I: Configured from console by console</msg>
<status status="PASS" endtime="20170105 08:24:09.599" starttime="20170105 08:21:26.681"></status>
</kw>
<status status="PASS" endtime="20170105 08:24:09.599" starttime="20170105 08:21:26.681"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>redistribution</arg>
<arg>R3</arg>
<arg>${R3_AS_id}</arg>
<arg>${Process_id}</arg>
</arguments>
<kw name="Redistribution" library="IBGP">
<arguments>
<arg>R3</arg>
<arg>${R3_AS_id}</arg>
<arg>${Process_id}</arg>
</arguments>
<msg timestamp="20170105 08:26:52.437" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router ospf 1
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#redistribute bgp 2 subnets
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#end
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
*Jan  5 08:25:02.847: %SYS-5-CONFIG_I: Configured from console by console</msg>
<status status="PASS" endtime="20170105 08:26:52.438" starttime="20170105 08:24:09.600"></status>
</kw>
<status status="PASS" endtime="20170105 08:26:52.438" starttime="20170105 08:24:09.599"></status>
</kw>
<status status="PASS" endtime="20170105 08:26:52.438" starttime="20170105 08:21:26.679"></status>
</kw>
<status status="PASS" endtime="20170105 08:26:52.438" critical="yes" starttime="20170105 07:25:25.386"></status>
</test>
<test id="s1-t2" name="Operational Phase">
<kw name="Check if ip address is set and interface is up" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Checking if ip address is set and interface is up</arg>
</arguments>
<status status="PASS" endtime="20170105 08:26:52.441" starttime="20170105 08:26:52.440"></status>
</kw>
<kw type="for" name="${ELEMENT} IN [ @{Devices} ]">
<kw type="foritem" name="${ELEMENT} = R1">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip interface brief</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip interface brief</arg>
</arguments>
<msg timestamp="20170105 08:29:55.609" level="INFO">Device1#
Device1#
Device1#
Device1#
Device1#
Device1#show ip interface brief
Interface                  IP-Address      OK? Method Status                Protocol
FastEthernet0/0            192.168.23.3    YES manual up                    up      
FastEthernet0/1            192.168.34.3    YES manual up                    up      
GigabitEthernet0/1         unassigned      YES unset  administratively down down    
GigabitEthernet0/2         unassigned      YES unset  administratively down down    
GigabitEthernet0/3         unassigned      YES unset  administratively down down    
FastEthernet1/0            unassigned      YES unset  administratively down down    
Loopback0                  3.3.3.3         YES manual up                    up      
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#</msg>
<status status="PASS" endtime="20170105 08:29:55.610" starttime="20170105 08:26:52.442"></status>
</kw>
<msg timestamp="20170105 08:29:55.610" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:29:55.610" starttime="20170105 08:26:52.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Interfaces up in ${ELEMENT}</arg>
</arguments>
<msg timestamp="20170105 08:29:55.611" level="INFO">Interfaces up in R1</msg>
<status status="PASS" endtime="20170105 08:29:55.611" starttime="20170105 08:29:55.610"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>ip address not set or interface not up in</arg>
<arg>${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 08:29:55.614" starttime="20170105 08:29:55.611"></status>
</kw>
<status status="PASS" endtime="20170105 08:29:55.614" starttime="20170105 08:26:52.441"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = R2">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip interface brief</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip interface brief</arg>
</arguments>
<msg timestamp="20170105 08:32:53.489" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#show ip interface brief
Interface                  IP-Address      OK? Method Status                Protocol
FastEthernet0/0            192.168.23.2    YES manual up                    up      
FastEthernet0/1            192.168.12.2    YES manual up                    up      
GigabitEthernet0/1         unassigned      YES unset  administratively down down    
GigabitEthernet0/2         unassigned      YES unset  administratively down down    
GigabitEthernet0/3         unassigned      YES unset  administratively down down    
FastEthernet1/0            unassigned      YES unset  administratively down down    
Loopback0                  2.2.2.2         YES manual up                    up      
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#</msg>
<status status="PASS" endtime="20170105 08:32:53.489" starttime="20170105 08:29:55.615"></status>
</kw>
<msg timestamp="20170105 08:32:53.490" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:32:53.490" starttime="20170105 08:29:55.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Interfaces up in ${ELEMENT}</arg>
</arguments>
<msg timestamp="20170105 08:32:53.491" level="INFO">Interfaces up in R2</msg>
<status status="PASS" endtime="20170105 08:32:53.491" starttime="20170105 08:32:53.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>ip address not set or interface not up in</arg>
<arg>${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 08:32:53.493" starttime="20170105 08:32:53.491"></status>
</kw>
<status status="PASS" endtime="20170105 08:32:53.493" starttime="20170105 08:29:55.614"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = R3">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip interface brief</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip interface brief</arg>
</arguments>
<msg timestamp="20170105 08:35:51.669" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#show ip interface brief
Interface                  IP-Address      OK? Method Status                Protocol
FastEthernet0/0            192.168.45.4    YES manual up                    up      
FastEthernet0/1            192.168.34.4    YES manual up                    up      
GigabitEthernet0/1         unassigned      YES unset  administratively down down    
GigabitEthernet0/2         unassigned      YES unset  administratively down down    
GigabitEthernet0/3         unassigned      YES unset  administratively down down    
FastEthernet1/0            unassigned      YES unset  administratively down down    
Loopback0                  4.4.4.4         YES manual up                    up      
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#</msg>
<status status="PASS" endtime="20170105 08:35:51.670" starttime="20170105 08:32:53.494"></status>
</kw>
<msg timestamp="20170105 08:35:51.670" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:35:51.670" starttime="20170105 08:32:53.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Interfaces up in ${ELEMENT}</arg>
</arguments>
<msg timestamp="20170105 08:35:51.671" level="INFO">Interfaces up in R3</msg>
<status status="PASS" endtime="20170105 08:35:51.672" starttime="20170105 08:35:51.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>ip address not set or interface not up in</arg>
<arg>${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 08:35:51.674" starttime="20170105 08:35:51.672"></status>
</kw>
<status status="PASS" endtime="20170105 08:35:51.674" starttime="20170105 08:32:53.493"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = R4">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip interface brief</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip interface brief</arg>
</arguments>
<msg timestamp="20170105 08:38:54.717" level="INFO">Device4#
Device4#
Device4#
Device4#
Device4#
Device4#show ip interface brief
Interface                  IP-Address      OK? Method Status                Protocol
FastEthernet0/0            192.168.12.1    YES manual up                    up      
FastEthernet0/1            unassigned      YES unset  administratively down down    
GigabitEthernet0/1         unassigned      YES unset  administratively down down    
GigabitEthernet0/2         unassigned      YES unset  administratively down down    
GigabitEthernet0/3         unassigned      YES unset  administratively down down    
FastEthernet1/0            unassigned      YES unset  administratively down down    
Loopback0                  1.1.1.1         YES manual up                    up      
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#</msg>
<status status="PASS" endtime="20170105 08:38:54.718" starttime="20170105 08:35:51.676"></status>
</kw>
<msg timestamp="20170105 08:38:54.718" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:38:54.718" starttime="20170105 08:35:51.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Interfaces up in ${ELEMENT}</arg>
</arguments>
<msg timestamp="20170105 08:38:54.719" level="INFO">Interfaces up in R4</msg>
<status status="PASS" endtime="20170105 08:38:54.720" starttime="20170105 08:38:54.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>ip address not set or interface not up in</arg>
<arg>${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 08:38:54.722" starttime="20170105 08:38:54.720"></status>
</kw>
<status status="PASS" endtime="20170105 08:38:54.722" starttime="20170105 08:35:51.675"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = R5">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip interface brief</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip interface brief</arg>
</arguments>
<msg timestamp="20170105 08:41:57.893" level="INFO">Device5#
Device5#
Device5#
Device5#
Device5#
Device5#show ip interface brief
Interface                  IP-Address      OK? Method Status                Protocol
FastEthernet0/0            192.168.45.5    YES manual up                    up      
FastEthernet0/1            unassigned      YES unset  administratively down down    
GigabitEthernet0/1         unassigned      YES unset  administratively down down    
GigabitEthernet0/2         unassigned      YES unset  administratively down down    
GigabitEthernet0/3         unassigned      YES unset  administratively down down    
FastEthernet1/0            unassigned      YES unset  administratively down down    
Loopback0                  5.5.5.5         YES manual up                    up      
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#</msg>
<status status="PASS" endtime="20170105 08:41:57.893" starttime="20170105 08:38:54.724"></status>
</kw>
<msg timestamp="20170105 08:41:57.894" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:41:57.894" starttime="20170105 08:38:54.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Interfaces up in ${ELEMENT}</arg>
</arguments>
<msg timestamp="20170105 08:41:57.895" level="INFO">Interfaces up in R5</msg>
<status status="PASS" endtime="20170105 08:41:57.895" starttime="20170105 08:41:57.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>ip address not set or interface not up in</arg>
<arg>${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 08:41:57.898" starttime="20170105 08:41:57.896"></status>
</kw>
<status status="PASS" endtime="20170105 08:41:57.898" starttime="20170105 08:38:54.723"></status>
</kw>
<status status="PASS" endtime="20170105 08:41:57.898" starttime="20170105 08:26:52.441"></status>
</kw>
<status status="PASS" endtime="20170105 08:41:57.898" starttime="20170105 08:26:52.440"></status>
</kw>
<kw name="Ensure that different autonomous systems can communicate with each other" library="Resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Autonomous system communication validated</arg>
</arguments>
<msg timestamp="20170105 08:41:57.900" level="INFO">Autonomous system communication validated</msg>
<status status="PASS" endtime="20170105 08:41:57.900" starttime="20170105 08:41:57.900"></status>
</kw>
<status status="PASS" endtime="20170105 08:41:57.900" starttime="20170105 08:41:57.899"></status>
</kw>
<kw name="Check if OSPF neighbors are established" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Checking if OSPF neighbors are established</arg>
</arguments>
<status status="PASS" endtime="20170105 08:41:57.902" starttime="20170105 08:41:57.901"></status>
</kw>
<kw type="for" name="${ELEMENT} IN [ @{Devices} ]">
<kw type="foritem" name="${ELEMENT} = R1">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip ospf neighbor</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip ospf neighbor</arg>
</arguments>
<msg timestamp="20170105 08:45:01.021" level="INFO">Device1#
Device1#
Device1#
Device1#
Device1#
Device1#show ip ospf neighbor

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#</msg>
<status status="PASS" endtime="20170105 08:45:01.021" starttime="20170105 08:41:57.903"></status>
</kw>
<msg timestamp="20170105 08:45:01.021" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:45:01.022" starttime="20170105 08:41:57.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OSPF neighbors learnt in ${ELEMENT}</arg>
</arguments>
<msg timestamp="20170105 08:45:01.023" level="INFO">OSPF neighbors learnt in R1</msg>
<status status="PASS" endtime="20170105 08:45:01.023" starttime="20170105 08:45:01.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>neighbor not established ${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 08:45:01.025" starttime="20170105 08:45:01.023"></status>
</kw>
<status status="PASS" endtime="20170105 08:45:01.025" starttime="20170105 08:41:57.902"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = R2">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip ospf neighbor</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip ospf neighbor</arg>
</arguments>
<msg timestamp="20170105 08:48:04.449" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#show ip ospf neighbor

Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#</msg>
<status status="PASS" endtime="20170105 08:48:04.449" starttime="20170105 08:45:01.026"></status>
</kw>
<msg timestamp="20170105 08:48:04.449" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:48:04.449" starttime="20170105 08:45:01.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OSPF neighbors learnt in ${ELEMENT}</arg>
</arguments>
<msg timestamp="20170105 08:48:04.450" level="INFO">OSPF neighbors learnt in R2</msg>
<status status="PASS" endtime="20170105 08:48:04.451" starttime="20170105 08:48:04.450"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>neighbor not established ${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 08:48:04.453" starttime="20170105 08:48:04.451"></status>
</kw>
<status status="PASS" endtime="20170105 08:48:04.453" starttime="20170105 08:45:01.025"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = R3">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip ospf neighbor</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip ospf neighbor</arg>
</arguments>
<msg timestamp="20170105 08:51:08.289" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#show ip ospf neighbor

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#</msg>
<status status="PASS" endtime="20170105 08:51:08.289" starttime="20170105 08:48:04.454"></status>
</kw>
<msg timestamp="20170105 08:51:08.290" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:51:08.290" starttime="20170105 08:48:04.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OSPF neighbors learnt in ${ELEMENT}</arg>
</arguments>
<msg timestamp="20170105 08:51:08.291" level="INFO">OSPF neighbors learnt in R3</msg>
<status status="PASS" endtime="20170105 08:51:08.291" starttime="20170105 08:51:08.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>neighbor not established ${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 08:51:08.294" starttime="20170105 08:51:08.291"></status>
</kw>
<status status="PASS" endtime="20170105 08:51:08.294" starttime="20170105 08:48:04.453"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = R4">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip ospf neighbor</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip ospf neighbor</arg>
</arguments>
<msg timestamp="20170105 08:53:48.877" level="INFO">Device4#
Device4#
Device4#
Device4#
Device4#
Device4#show ip ospf neighbor

Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#</msg>
<status status="PASS" endtime="20170105 08:53:48.877" starttime="20170105 08:51:08.295"></status>
</kw>
<msg timestamp="20170105 08:53:48.878" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:53:48.878" starttime="20170105 08:51:08.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OSPF neighbors learnt in ${ELEMENT}</arg>
</arguments>
<msg timestamp="20170105 08:53:48.879" level="INFO">OSPF neighbors learnt in R4</msg>
<status status="PASS" endtime="20170105 08:53:48.879" starttime="20170105 08:53:48.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>neighbor not established ${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 08:53:48.881" starttime="20170105 08:53:48.879"></status>
</kw>
<status status="PASS" endtime="20170105 08:53:48.882" starttime="20170105 08:51:08.294"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = R5">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip ospf neighbor</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip ospf neighbor</arg>
</arguments>
<msg timestamp="20170105 08:56:29.977" level="INFO">Device5#
Device5#
Device5#
Device5#
Device5#
Device5#show ip ospf neighbor

Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#</msg>
<status status="PASS" endtime="20170105 08:56:29.977" starttime="20170105 08:53:48.883"></status>
</kw>
<msg timestamp="20170105 08:56:29.978" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:56:29.978" starttime="20170105 08:53:48.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OSPF neighbors learnt in ${ELEMENT}</arg>
</arguments>
<msg timestamp="20170105 08:56:29.979" level="INFO">OSPF neighbors learnt in R5</msg>
<status status="PASS" endtime="20170105 08:56:29.979" starttime="20170105 08:56:29.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>neighbor not established ${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 08:56:29.981" starttime="20170105 08:56:29.979"></status>
</kw>
<status status="PASS" endtime="20170105 08:56:29.982" starttime="20170105 08:53:48.882"></status>
</kw>
<status status="PASS" endtime="20170105 08:56:29.982" starttime="20170105 08:41:57.902"></status>
</kw>
<status status="PASS" endtime="20170105 08:56:29.982" starttime="20170105 08:41:57.901"></status>
</kw>
<kw name="Check if all routes are learnt by devices" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Checking if all routes are learnt by devices</arg>
</arguments>
<status status="PASS" endtime="20170105 08:56:29.983" starttime="20170105 08:56:29.983"></status>
</kw>
<kw type="for" name="${ELEMENT} IN [ @{Devices} ]">
<kw type="foritem" name="${ELEMENT} = R1">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip bgp</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip bgp</arg>
</arguments>
<msg timestamp="20170105 08:59:32.937" level="INFO">Device1#
Device1#
Device1#
Device1#
Device1#
Device1#show ip bgp
% BGP not active

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#</msg>
<status status="PASS" endtime="20170105 08:59:32.937" starttime="20170105 08:56:29.985"></status>
</kw>
<msg timestamp="20170105 08:59:32.938" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 08:59:32.938" starttime="20170105 08:56:29.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Routes learnt by ${Element}</arg>
</arguments>
<msg timestamp="20170105 08:59:32.939" level="INFO">Routes learnt by R1</msg>
<status status="PASS" endtime="20170105 08:59:32.939" starttime="20170105 08:59:32.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>routes not learnt ${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 08:59:32.941" starttime="20170105 08:59:32.939"></status>
</kw>
<status status="PASS" endtime="20170105 08:59:32.941" starttime="20170105 08:56:29.984"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = R2">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip bgp</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip bgp</arg>
</arguments>
<msg timestamp="20170105 09:02:36.301" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#show ip bgp

Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#</msg>
<status status="PASS" endtime="20170105 09:02:36.301" starttime="20170105 08:59:32.942"></status>
</kw>
<msg timestamp="20170105 09:02:36.302" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 09:02:36.302" starttime="20170105 08:59:32.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Routes learnt by ${Element}</arg>
</arguments>
<msg timestamp="20170105 09:02:36.303" level="INFO">Routes learnt by R2</msg>
<status status="PASS" endtime="20170105 09:02:36.303" starttime="20170105 09:02:36.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>routes not learnt ${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 09:02:36.305" starttime="20170105 09:02:36.303"></status>
</kw>
<status status="PASS" endtime="20170105 09:02:36.306" starttime="20170105 08:59:32.942"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = R3">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip bgp</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip bgp</arg>
</arguments>
<msg timestamp="20170105 09:05:39.178" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#show ip bgp

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#</msg>
<status status="PASS" endtime="20170105 09:05:39.179" starttime="20170105 09:02:36.307"></status>
</kw>
<msg timestamp="20170105 09:05:39.179" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 09:05:39.179" starttime="20170105 09:02:36.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Routes learnt by ${Element}</arg>
</arguments>
<msg timestamp="20170105 09:05:39.180" level="INFO">Routes learnt by R3</msg>
<status status="PASS" endtime="20170105 09:05:39.180" starttime="20170105 09:05:39.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>routes not learnt ${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 09:05:39.182" starttime="20170105 09:05:39.181"></status>
</kw>
<status status="PASS" endtime="20170105 09:05:39.183" starttime="20170105 09:02:36.306"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = R4">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip bgp</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip bgp</arg>
</arguments>
<msg timestamp="20170105 09:08:43.069" level="INFO">Device4#
Device4#
Device4#
Device4#
Device4#
Device4#show ip bgp

Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#</msg>
<status status="PASS" endtime="20170105 09:08:43.069" starttime="20170105 09:05:39.184"></status>
</kw>
<msg timestamp="20170105 09:08:43.070" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 09:08:43.070" starttime="20170105 09:05:39.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Routes learnt by ${Element}</arg>
</arguments>
<msg timestamp="20170105 09:08:43.071" level="INFO">Routes learnt by R4</msg>
<status status="PASS" endtime="20170105 09:08:43.071" starttime="20170105 09:08:43.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>routes not learnt ${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 09:08:43.073" starttime="20170105 09:08:43.071"></status>
</kw>
<status status="PASS" endtime="20170105 09:08:43.073" starttime="20170105 09:05:39.183"></status>
</kw>
<kw type="foritem" name="${ELEMENT} = R5">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>checking_operabilty</arg>
<arg>${ELEMENT}</arg>
<arg>show ip bgp</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Checking Operabilty" library="operational_ph">
<arguments>
<arg>${ELEMENT}</arg>
<arg>show ip bgp</arg>
</arguments>
<msg timestamp="20170105 09:11:24.145" level="INFO">Device5#
Device5#
Device5#
Device5#
Device5#
Device5#show ip bgp

Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#</msg>
<status status="PASS" endtime="20170105 09:11:24.145" starttime="20170105 09:08:43.074"></status>
</kw>
<msg timestamp="20170105 09:11:24.146" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170105 09:11:24.146" starttime="20170105 09:08:43.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Routes learnt by ${Element}</arg>
</arguments>
<msg timestamp="20170105 09:11:24.147" level="INFO">Routes learnt by R5</msg>
<status status="PASS" endtime="20170105 09:11:24.147" starttime="20170105 09:11:24.146"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>routes not learnt ${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170105 09:11:24.150" starttime="20170105 09:11:24.148"></status>
</kw>
<status status="PASS" endtime="20170105 09:11:24.150" starttime="20170105 09:08:43.073"></status>
</kw>
<status status="PASS" endtime="20170105 09:11:24.150" starttime="20170105 08:56:29.984"></status>
</kw>
<status status="PASS" endtime="20170105 09:11:24.150" starttime="20170105 08:56:29.982"></status>
</kw>
<status status="PASS" endtime="20170105 09:11:24.151" critical="yes" starttime="20170105 08:26:52.439"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown Actions done here</arg>
</arguments>
<status status="PASS" endtime="20170105 09:11:24.153" starttime="20170105 09:11:24.153"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Unconfiguring IP_Address</arg>
</arguments>
<status status="PASS" endtime="20170105 09:11:24.154" starttime="20170105 09:11:24.153"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R1</arg>
<arg>${Links_of_R1}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Configuring IP_Address">
<arguments>
<arg>R1</arg>
<arg>${Links_of_R1}</arg>
<arg>unconfigure</arg>
</arguments>
<msg timestamp="20170105 09:11:24.166" level="FAIL">No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address</msg>
<status status="FAIL" endtime="20170105 09:11:24.166" starttime="20170105 09:11:24.166"></status>
</kw>
<status status="FAIL" endtime="20170105 09:11:24.166" starttime="20170105 09:11:24.154"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address unconfigured in R1</arg>
</arguments>
<status status="PASS" endtime="20170105 09:11:24.167" starttime="20170105 09:11:24.167"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R2</arg>
<arg>${Links_of_R2}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Configuring IP_Address">
<arguments>
<arg>R2</arg>
<arg>${Links_of_R2}</arg>
<arg>unconfigure</arg>
</arguments>
<msg timestamp="20170105 09:11:24.174" level="FAIL">No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address</msg>
<status status="FAIL" endtime="20170105 09:11:24.174" starttime="20170105 09:11:24.174"></status>
</kw>
<status status="FAIL" endtime="20170105 09:11:24.175" starttime="20170105 09:11:24.168"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address unconfigured in R2</arg>
</arguments>
<status status="PASS" endtime="20170105 09:11:24.175" starttime="20170105 09:11:24.175"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R3</arg>
<arg>${Links_of_R3}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Configuring IP_Address">
<arguments>
<arg>R3</arg>
<arg>${Links_of_R3}</arg>
<arg>unconfigure</arg>
</arguments>
<msg timestamp="20170105 09:11:24.187" level="FAIL">No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address</msg>
<status status="FAIL" endtime="20170105 09:11:24.187" starttime="20170105 09:11:24.187"></status>
</kw>
<status status="FAIL" endtime="20170105 09:11:24.188" starttime="20170105 09:11:24.176"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address unconfigured in R3</arg>
</arguments>
<status status="PASS" endtime="20170105 09:11:24.189" starttime="20170105 09:11:24.188"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R4</arg>
<arg>${Links_of_R4}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Configuring IP_Address">
<arguments>
<arg>R4</arg>
<arg>${Links_of_R4}</arg>
<arg>unconfigure</arg>
</arguments>
<msg timestamp="20170105 09:11:24.201" level="FAIL">No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address</msg>
<status status="FAIL" endtime="20170105 09:11:24.201" starttime="20170105 09:11:24.201"></status>
</kw>
<status status="FAIL" endtime="20170105 09:11:24.202" starttime="20170105 09:11:24.189"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address unconfigured in R4</arg>
</arguments>
<status status="PASS" endtime="20170105 09:11:24.203" starttime="20170105 09:11:24.202"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R5</arg>
<arg>${Links_of_R5}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Configuring IP_Address">
<arguments>
<arg>R5</arg>
<arg>${Links_of_R5}</arg>
<arg>unconfigure</arg>
</arguments>
<msg timestamp="20170105 09:11:24.209" level="FAIL">No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address</msg>
<status status="FAIL" endtime="20170105 09:11:24.210" starttime="20170105 09:11:24.209"></status>
</kw>
<status status="FAIL" endtime="20170105 09:11:24.210" starttime="20170105 09:11:24.203"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address unconfigured in R5</arg>
</arguments>
<status status="PASS" endtime="20170105 09:11:24.213" starttime="20170105 09:11:24.210"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Disabling password and unsetting hostname</arg>
</arguments>
<status status="PASS" endtime="20170105 09:11:24.213" starttime="20170105 09:11:24.213"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>connect_all</arg>
<arg>disable</arg>
</arguments>
<kw name="Connect All" library="setup_actions">
<arguments>
<arg>disable</arg>
</arguments>
<msg timestamp="20170105 09:18:38.145" level="INFO">Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#no hostname Device1 
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#no enable password router1
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#

Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#no hostname Device2 
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#no enable password router2
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#no hostname Device3 
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#no enable password router3
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#</msg>
<status status="PASS" endtime="20170105 09:18:38.146" starttime="20170105 09:11:24.215"></status>
</kw>
<status status="PASS" endtime="20170105 09:18:38.146" starttime="20170105 09:11:24.214"></status>
</kw>
<status status="FAIL" endtime="20170105 09:18:38.147" starttime="20170105 09:11:24.152">Several failures occurred:

1) No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address

2) No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address

3) No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address

4) No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address

5) No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address</status>
</kw>
<doc>A test suite with tests for configuring BGP.
Topology:-
____________________________
| R1 AS2 |
| /  |
| /  |
| R2 R3 |
|_________|________|_________|
| |
______|__ ___|______
| AS1| | AS3|
| R4 | | R5 |
|_________| |__________|
Testplan Goals:-
1. Configure IP addresses as per the topology.
2. Each Router should have a loopback0 interface.
3. Configure OSPF within AS2 to advertise the loopback0 interfaces.
Don't advertise or run OSPF on the links interconnecting AS1 and AS3.
4. Configure IBGP between R2 and R3. Source the BGP updates from the loopback0 interfaces.
5. Enable BGP synchronisation.
6. Configure EBGP between R2 and R4.
7. Configure EBGP between R3 and R5.
8. Advertise the loopback0 interfaces on R4 and R5.
9. Ensure AS1 and AS3 can communicate with each other without removing the BGP synchronisation command.</doc>
<metadata>
<item name="Version">1.0
More Info For more information about Robot Framework see http://robotframework.org
Author Payal Jain
Date 19 Dec 2016
Executed At ${HOST}
Test Framework Robot Framework Python</item>
</metadata>
<status status="FAIL" endtime="20170105 09:18:38.147" starttime="20170105 07:06:53.559">Suite teardown failed:
Several failures occurred:

1) No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address

2) No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address

3) No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address

4) No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address

5) No keyword with name 'Configuring IP_Address' found. Did you mean:
    Resource.Configure Ip Address</status>
</suite>
<statistics>
<total>
<stat fail="2" pass="0">Critical Tests</stat>
<stat fail="2" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="2" id="s1" name="BGP" pass="0">BGP</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
