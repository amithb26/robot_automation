<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170103 16:12:17.387" generator="Robot 3.0 (Python 2.7.12 on linux2)">
<suite source="/home/guccha/robot_automation/BGP_Casestudy/BGP.robot" id="s1" name="BGP">
<kw type="setup" name="Setup Actions" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Setup Actions done here</arg>
</arguments>
<status status="PASS" endtime="20170103 16:12:17.438" starttime="20170103 16:12:17.438"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>connect_all</arg>
<arg>enable</arg>
</arguments>
<kw name="Connect All" library="setup_actions">
<arguments>
<arg>enable</arg>
</arguments>
<msg timestamp="20170103 16:32:22.139" level="INFO">Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device4 
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#enable password router4
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#

Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device5 
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#enable password router5
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#

Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device1 
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#enable password router1
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#

Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device2 
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#enable password router2
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#

Router#
Router#
Router#
Router#
Router#
Router#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#
Router(config)#hostname Device3 
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#enable password router3
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#</msg>
<status status="PASS" endtime="20170103 16:32:22.139" starttime="20170103 16:12:17.439"></status>
</kw>
<status status="PASS" endtime="20170103 16:32:22.140" starttime="20170103 16:12:17.438"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Initial setup completed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:32:22.140" starttime="20170103 16:32:22.140"></status>
</kw>
<status status="PASS" endtime="20170103 16:32:22.140" starttime="20170103 16:12:17.438"></status>
</kw>
<test id="s1-t1" name="Bring_up Phase">
<kw name="Configure IP addresses as per the topology" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
</arguments>
<status status="PASS" endtime="20170103 16:32:22.141" starttime="20170103 16:32:22.141"></status>
</kw>
<status status="PASS" endtime="20170103 16:32:22.142" starttime="20170103 16:32:22.141"></status>
</kw>
<kw name="Configure ip address" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
</arguments>
<status status="PASS" endtime="20170103 16:32:22.142" starttime="20170103 16:32:22.142"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R1</arg>
<arg>${Links_of_R1}</arg>
<arg>configure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R1</arg>
<arg>${Links_of_R1}</arg>
<arg>configure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:34:52.863" level="INFO">
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#interface f0/0
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#ip address 192.168.23.3  255.255.255.0 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#no shutdown
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#interface f0/1
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#ip address 192.168.34.3  255.255.255.0 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#no shutdown
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#no shutdown 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#</msg>
<msg timestamp="20170103 16:34:52.864" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:34:52.864" starttime="20170103 16:32:22.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:34:52.865" starttime="20170103 16:34:52.864"></status>
</kw>
<status status="PASS" endtime="20170103 16:34:52.865" starttime="20170103 16:32:22.143"></status>
</kw>
<status status="PASS" endtime="20170103 16:34:52.865" starttime="20170103 16:32:22.142"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R1</arg>
</arguments>
<status status="PASS" endtime="20170103 16:34:52.866" starttime="20170103 16:34:52.866"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R2</arg>
<arg>${Links_of_R2}</arg>
<arg>configure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R2</arg>
<arg>${Links_of_R2}</arg>
<arg>configure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:37:23.735" level="INFO">
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#interface f0/0
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#ip address 192.168.23.2  255.255.255.0 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#no shutdown
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#

Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#interface f0/1
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#ip address 192.168.12.2  255.255.255.0 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#no shutdown
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#no shutdown 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#</msg>
<msg timestamp="20170103 16:37:23.735" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:37:23.735" starttime="20170103 16:34:52.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:37:23.737" starttime="20170103 16:37:23.736"></status>
</kw>
<status status="PASS" endtime="20170103 16:37:23.737" starttime="20170103 16:34:52.867"></status>
</kw>
<status status="PASS" endtime="20170103 16:37:23.737" starttime="20170103 16:34:52.866"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R2</arg>
</arguments>
<status status="PASS" endtime="20170103 16:37:23.738" starttime="20170103 16:37:23.737"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R3</arg>
<arg>${Links_of_R3}</arg>
<arg>configure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R3</arg>
<arg>${Links_of_R3}</arg>
<arg>configure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:39:54.442" level="INFO">
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#interface f0/1
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#ip address 192.168.34.4  255.255.255.0 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#no shutdown
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#interface f0/0
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#ip address 192.168.45.4  255.255.255.0 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#no shutdown
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#no shutdown 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#</msg>
<msg timestamp="20170103 16:39:54.443" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:39:54.443" starttime="20170103 16:37:23.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:39:54.445" starttime="20170103 16:39:54.443"></status>
</kw>
<status status="PASS" endtime="20170103 16:39:54.445" starttime="20170103 16:37:23.738"></status>
</kw>
<status status="PASS" endtime="20170103 16:39:54.445" starttime="20170103 16:37:23.738"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R3</arg>
</arguments>
<status status="PASS" endtime="20170103 16:39:54.445" starttime="20170103 16:39:54.445"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R4</arg>
<arg>${Links_of_R4}</arg>
<arg>configure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R4</arg>
<arg>${Links_of_R4}</arg>
<arg>configure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:41:15.667" level="INFO">
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#interface f0/0
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#ip address 192.168.12.1  255.255.255.0 
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#no shutdown
Device4(config-if)#no shutdown 
Device4(config-if)#no shutdown 
Device4(config-if)#no shutdown 
Device4(config-if)#no shutdown 
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#</msg>
<msg timestamp="20170103 16:41:15.668" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:41:15.668" starttime="20170103 16:39:54.446"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:41:15.669" starttime="20170103 16:41:15.668"></status>
</kw>
<status status="PASS" endtime="20170103 16:41:15.670" starttime="20170103 16:39:54.446"></status>
</kw>
<status status="PASS" endtime="20170103 16:41:15.670" starttime="20170103 16:39:54.446"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R4</arg>
</arguments>
<status status="PASS" endtime="20170103 16:41:15.670" starttime="20170103 16:41:15.670"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R5</arg>
<arg>${Links_of_R5}</arg>
<arg>configure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R5</arg>
<arg>${Links_of_R5}</arg>
<arg>configure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:42:36.905" level="INFO">
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#interface f0/0
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#ip address 192.168.45.5  255.255.255.0 
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#no shutdown
Device5(config-if)#no shutdown 
Device5(config-if)#no shutdown 
Device5(config-if)#no shutdown 
Device5(config-if)#no shutdown 
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#</msg>
<msg timestamp="20170103 16:42:36.905" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:42:36.905" starttime="20170103 16:41:15.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:42:36.907" starttime="20170103 16:42:36.906"></status>
</kw>
<status status="PASS" endtime="20170103 16:42:36.907" starttime="20170103 16:41:15.670"></status>
</kw>
<status status="PASS" endtime="20170103 16:42:36.907" starttime="20170103 16:41:15.670"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address configured in R5</arg>
</arguments>
<status status="PASS" endtime="20170103 16:42:36.908" starttime="20170103 16:42:36.907"></status>
</kw>
<status status="PASS" endtime="20170103 16:42:36.908" starttime="20170103 16:32:22.142"></status>
</kw>
<kw name="Set loopback interface" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
</arguments>
<status status="PASS" endtime="20170103 16:42:36.908" starttime="20170103 16:42:36.908"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
<arg>R1</arg>
<arg>set</arg>
</arguments>
<kw name="Setting Loopback interface" library="Resource">
<arguments>
<arg>R1</arg>
<arg>set</arg>
</arguments>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:43:57.899" level="INFO">Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#interface loopback0
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#ip address 3.3.3.3  255.255.255.255 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#end
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#</msg>
<msg timestamp="20170103 16:43:57.900" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:43:57.900" starttime="20170103 16:42:36.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:43:57.901" starttime="20170103 16:43:57.900"></status>
</kw>
<status status="PASS" endtime="20170103 16:43:57.902" starttime="20170103 16:42:36.909"></status>
</kw>
<status status="PASS" endtime="20170103 16:43:57.902" starttime="20170103 16:42:36.909"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R1</arg>
</arguments>
<status status="PASS" endtime="20170103 16:43:57.902" starttime="20170103 16:43:57.902"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
<arg>R2</arg>
<arg>set</arg>
</arguments>
<kw name="Setting Loopback interface" library="Resource">
<arguments>
<arg>R2</arg>
<arg>set</arg>
</arguments>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:45:18.685" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#interface loopback0
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#ip address 2.2.2.2  255.255.255.255 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#end
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#</msg>
<msg timestamp="20170103 16:45:18.686" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:45:18.686" starttime="20170103 16:43:57.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:45:18.689" starttime="20170103 16:45:18.686"></status>
</kw>
<status status="PASS" endtime="20170103 16:45:18.689" starttime="20170103 16:43:57.903"></status>
</kw>
<status status="PASS" endtime="20170103 16:45:18.689" starttime="20170103 16:43:57.902"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R2</arg>
</arguments>
<status status="PASS" endtime="20170103 16:45:18.691" starttime="20170103 16:45:18.690"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
<arg>R3</arg>
<arg>set</arg>
</arguments>
<kw name="Setting Loopback interface" library="Resource">
<arguments>
<arg>R3</arg>
<arg>set</arg>
</arguments>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:46:40.184" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#interface loopback0
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#ip address 4.4.4.4  255.255.255.255 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#end
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#</msg>
<msg timestamp="20170103 16:46:40.185" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:46:40.185" starttime="20170103 16:45:18.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:46:40.187" starttime="20170103 16:46:40.185"></status>
</kw>
<status status="PASS" endtime="20170103 16:46:40.187" starttime="20170103 16:45:18.692"></status>
</kw>
<status status="PASS" endtime="20170103 16:46:40.187" starttime="20170103 16:45:18.691"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R3</arg>
</arguments>
<status status="PASS" endtime="20170103 16:46:40.187" starttime="20170103 16:46:40.187"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
<arg>R4</arg>
<arg>set</arg>
</arguments>
<kw name="Setting Loopback interface" library="Resource">
<arguments>
<arg>R4</arg>
<arg>set</arg>
</arguments>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:48:01.182" level="INFO">Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#interface loopback0
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#ip address 1.1.1.1  255.255.255.255 
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#end
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#</msg>
<msg timestamp="20170103 16:48:01.182" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:48:01.182" starttime="20170103 16:46:40.189"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:48:01.184" starttime="20170103 16:48:01.182"></status>
</kw>
<status status="PASS" endtime="20170103 16:48:01.184" starttime="20170103 16:46:40.188"></status>
</kw>
<status status="PASS" endtime="20170103 16:48:01.184" starttime="20170103 16:46:40.187"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R4</arg>
</arguments>
<status status="PASS" endtime="20170103 16:48:01.184" starttime="20170103 16:48:01.184"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Setting Loopback interface</arg>
<arg>R5</arg>
<arg>set</arg>
</arguments>
<kw name="Setting Loopback interface" library="Resource">
<arguments>
<arg>R5</arg>
<arg>set</arg>
</arguments>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:49:22.183" level="INFO">Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#interface loopback0
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#ip address 5.5.5.5  255.255.255.255 
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#end
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#</msg>
<msg timestamp="20170103 16:49:22.184" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:49:22.184" starttime="20170103 16:48:01.185"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:49:22.185" starttime="20170103 16:49:22.184"></status>
</kw>
<status status="PASS" endtime="20170103 16:49:22.185" starttime="20170103 16:48:01.185"></status>
</kw>
<status status="PASS" endtime="20170103 16:49:22.186" starttime="20170103 16:48:01.184"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_Address configured in R5</arg>
</arguments>
<status status="PASS" endtime="20170103 16:49:22.186" starttime="20170103 16:49:22.186"></status>
</kw>
<status status="PASS" endtime="20170103 16:49:22.186" starttime="20170103 16:42:36.908"></status>
</kw>
<kw name="Configure OSPF within AS2 to advertise the connected networks" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Configuring OSPF</arg>
</arguments>
<status status="PASS" endtime="20170103 16:49:22.187" starttime="20170103 16:49:22.187"></status>
</kw>
<status status="PASS" endtime="20170103 16:49:22.187" starttime="20170103 16:49:22.186"></status>
</kw>
<kw name="Enable OSPF in devices present in AS2 and set the ospf neighbors" library="Resource">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring_ospf</arg>
<arg>R1</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R1}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configuring_ospf" library="Resource">
<arguments>
<arg>R1</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R1}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configure Ospf" library="OSPF">
<arguments>
<arg>${device}</arg>
<arg>${process_id}</arg>
<arg>${network_connected}</arg>
<arg>${area}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:53:02.903" level="INFO">Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#router ospf 1
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#network 192.168.23.0  0.0.0.255 area 0 
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#router ospf 1
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#network 192.168.34.0  0.0.0.255 area 0 
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#

Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#router ospf 1
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#network 3.3.3.0  0.0.0.255 area 0 
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#
Device1(config-router)#</msg>
<msg timestamp="20170103 16:53:02.903" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:53:02.904" starttime="20170103 16:49:22.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ospf on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:53:02.905" starttime="20170103 16:53:02.904"></status>
</kw>
<status status="PASS" endtime="20170103 16:53:02.905" starttime="20170103 16:49:22.188"></status>
</kw>
<status status="PASS" endtime="20170103 16:53:02.905" starttime="20170103 16:49:22.187"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>OSPF configured in R1</arg>
</arguments>
<status status="PASS" endtime="20170103 16:53:02.906" starttime="20170103 16:53:02.906"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring_ospf</arg>
<arg>R2</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R2}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configuring_ospf" library="Resource">
<arguments>
<arg>R2</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R2}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configure Ospf" library="OSPF">
<arguments>
<arg>${device}</arg>
<arg>${process_id}</arg>
<arg>${network_connected}</arg>
<arg>${area}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:55:36.421" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router ospf 1
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#network 192.168.23.0  0.0.0.255 area 0 
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#

Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router ospf 1
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#network 2.2.2.0  0.0.0.255 area 0 
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#</msg>
<msg timestamp="20170103 16:55:36.421" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:55:36.421" starttime="20170103 16:53:02.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ospf on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:55:36.423" starttime="20170103 16:55:36.422"></status>
</kw>
<status status="PASS" endtime="20170103 16:55:36.423" starttime="20170103 16:53:02.906"></status>
</kw>
<status status="PASS" endtime="20170103 16:55:36.423" starttime="20170103 16:53:02.906"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>OSPF configured in R2</arg>
</arguments>
<status status="PASS" endtime="20170103 16:55:36.424" starttime="20170103 16:55:36.423"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring_ospf</arg>
<arg>R3</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R3}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configuring_ospf" library="Resource">
<arguments>
<arg>R3</arg>
<arg>${Process_id}</arg>
<arg>${Networks_connected_to_R3}</arg>
<arg>${Area1}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configure Ospf" library="OSPF">
<arguments>
<arg>${device}</arg>
<arg>${process_id}</arg>
<arg>${network_connected}</arg>
<arg>${area}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:58:09.231" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router ospf 1
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#network 192.168.34.0  0.0.0.255 area 0 
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#

Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router ospf 1
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#network 4.4.4.0  0.0.0.255 area 0 
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#</msg>
<msg timestamp="20170103 16:58:09.232" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:58:09.232" starttime="20170103 16:55:36.425"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ospf on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:58:09.233" starttime="20170103 16:58:09.232"></status>
</kw>
<status status="PASS" endtime="20170103 16:58:09.234" starttime="20170103 16:55:36.424"></status>
</kw>
<status status="PASS" endtime="20170103 16:58:09.234" starttime="20170103 16:55:36.424"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>OSPF configured in R3</arg>
</arguments>
<status status="PASS" endtime="20170103 16:58:09.234" starttime="20170103 16:58:09.234"></status>
</kw>
<status status="PASS" endtime="20170103 16:58:09.234" starttime="20170103 16:49:22.187"></status>
</kw>
<kw name="Configure IBGP and source the BGP updates from the loopback0 interfaces" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Setting IBGP between R2 and R3</arg>
</arguments>
<status status="PASS" endtime="20170103 16:58:09.235" starttime="20170103 16:58:09.235"></status>
</kw>
<status status="PASS" endtime="20170103 16:58:09.235" starttime="20170103 16:58:09.235"></status>
</kw>
<kw name="Enable BGP and advertise the updates from the loopback interface" library="Resource">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring_IBGP</arg>
<arg>R2</arg>
<arg>${AS_id}</arg>
<arg>${R3_interface}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configuring_IBGP" library="Resource">
<arguments>
<arg>R2</arg>
<arg>${AS_id}</arg>
<arg>${R3_interface}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configure IBGP" library="IBGP">
<arguments>
<arg>${device}</arg>
<arg>${AS_id}</arg>
<arg>${interface}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 16:59:50.207" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router bgp 2
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#neighbor 4.4.4.4 remote-as 2
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#neighbor 4.4.4.4 update-source loopback 0
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#</msg>
<msg timestamp="20170103 16:59:50.207" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 16:59:50.207" starttime="20170103 16:58:09.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ibgp on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 16:59:50.209" starttime="20170103 16:59:50.208"></status>
</kw>
<status status="PASS" endtime="20170103 16:59:50.209" starttime="20170103 16:58:09.236"></status>
</kw>
<status status="PASS" endtime="20170103 16:59:50.209" starttime="20170103 16:58:09.236"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IBGP configured in R2</arg>
</arguments>
<status status="PASS" endtime="20170103 16:59:50.210" starttime="20170103 16:59:50.210"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring_IBGP</arg>
<arg>R3</arg>
<arg>${AS_id}</arg>
<arg>${R2_interface}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configuring_IBGP" library="Resource">
<arguments>
<arg>R3</arg>
<arg>${AS_id}</arg>
<arg>${R2_interface}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configure IBGP" library="IBGP">
<arguments>
<arg>${device}</arg>
<arg>${AS_id}</arg>
<arg>${interface}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 17:01:31.031" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router bgp 2
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#neighbor 2.2.2.2 remote-as 2
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#neighbor 2.2.2.2 update-source loopback 0
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#</msg>
<msg timestamp="20170103 17:01:31.031" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 17:01:31.031" starttime="20170103 16:59:50.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring ibgp on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 17:01:31.033" starttime="20170103 17:01:31.032"></status>
</kw>
<status status="PASS" endtime="20170103 17:01:31.033" starttime="20170103 16:59:50.210"></status>
</kw>
<status status="PASS" endtime="20170103 17:01:31.033" starttime="20170103 16:59:50.210"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IBGP configured in R3</arg>
</arguments>
<status status="PASS" endtime="20170103 17:01:31.034" starttime="20170103 17:01:31.033"></status>
</kw>
<status status="PASS" endtime="20170103 17:01:31.034" starttime="20170103 16:58:09.235"></status>
</kw>
<kw name="Enable BGP Synchronisation" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Enabling BGP synchronization</arg>
</arguments>
<status status="PASS" endtime="20170103 17:01:31.034" starttime="20170103 17:01:31.034"></status>
</kw>
<status status="PASS" endtime="20170103 17:01:31.035" starttime="20170103 17:01:31.034"></status>
</kw>
<kw name="Enable synchronisation between border routers" library="Resource">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>enable_syn</arg>
<arg>R2</arg>
<arg>${AS_id}</arg>
</arguments>
<kw name="Enable Syn" library="IBGP">
<arguments>
<arg>R2</arg>
<arg>${AS_id}</arg>
</arguments>
<msg timestamp="20170103 17:04:11.751" level="INFO">Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#router bgp 2
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#synchronization
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#
Device2(config-router)#end
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
*Jan  3 17:01:50.035: %SYS-5-CONFIG_I: Configured from console by console</msg>
<status status="PASS" endtime="20170103 17:04:11.751" starttime="20170103 17:01:31.035"></status>
</kw>
<status status="PASS" endtime="20170103 17:04:11.751" starttime="20170103 17:01:31.035"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>enable_syn</arg>
<arg>R3</arg>
<arg>${AS_id}</arg>
</arguments>
<kw name="Enable Syn" library="IBGP">
<arguments>
<arg>R3</arg>
<arg>${AS_id}</arg>
</arguments>
<msg timestamp="20170103 17:06:52.442" level="INFO">Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#router bgp 2
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#synchronization
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#
Device3(config-router)#end
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
*Jan  3 17:04:31.375: %SYS-5-CONFIG_I: Configured from console by console</msg>
<status status="PASS" endtime="20170103 17:06:52.443" starttime="20170103 17:04:11.752"></status>
</kw>
<status status="PASS" endtime="20170103 17:06:52.443" starttime="20170103 17:04:11.752"></status>
</kw>
<status status="PASS" endtime="20170103 17:06:52.443" starttime="20170103 17:01:31.035"></status>
</kw>
<kw name="Configure EBGP" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Configuring EBGP between devices in different autonomous systems</arg>
</arguments>
<status status="PASS" endtime="20170103 17:06:52.444" starttime="20170103 17:06:52.444"></status>
</kw>
<status status="PASS" endtime="20170103 17:06:52.444" starttime="20170103 17:06:52.443"></status>
</kw>
<kw name="Enable BGP and advertise networks connected outside the autonomous system" library="Resource">
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring_EBGP</arg>
<arg>R2</arg>
<arg>${R2_AS_id}</arg>
<arg>${R2_einterface}</arg>
<arg>${R2_neighbor_AS_id}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configuring_EBGP" library="Resource">
<arguments>
<arg>R2</arg>
<arg>${R2_AS_id}</arg>
<arg>${R2_einterface}</arg>
<arg>${R2_neighbor_AS_id}</arg>
<arg>enable</arg>
</arguments>
<kw name="Configure EBGP" library="Resource">
<arguments>
<arg>${device}</arg>
<arg>${AS_id}</arg>
<arg>${interface}</arg>
<arg>${neighbor_AS_id}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 17:06:52.446" level="FAIL">Keyword 'Resource.Configure EBGP' expected 0 arguments, got 5.</msg>
<status status="FAIL" endtime="20170103 17:06:52.446" starttime="20170103 17:06:52.445"></status>
</kw>
<status status="FAIL" endtime="20170103 17:06:52.446" starttime="20170103 17:06:52.445"></status>
</kw>
<status status="FAIL" endtime="20170103 17:06:52.446" starttime="20170103 17:06:52.444"></status>
</kw>
<status status="FAIL" endtime="20170103 17:06:52.446" starttime="20170103 17:06:52.444"></status>
</kw>
<status status="FAIL" endtime="20170103 17:06:52.446" critical="yes" starttime="20170103 16:32:22.140">Keyword 'Resource.Configure EBGP' expected 0 arguments, got 5.</status>
</test>
<kw type="teardown" name="Teardown Actions" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown Actions done here</arg>
</arguments>
<status status="PASS" endtime="20170103 17:06:52.448" starttime="20170103 17:06:52.447"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Unconfiguring IP_Address</arg>
</arguments>
<status status="PASS" endtime="20170103 17:06:52.448" starttime="20170103 17:06:52.448"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R1</arg>
<arg>${Links_of_R1}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R1</arg>
<arg>${Links_of_R1}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 17:10:22.839" level="INFO">
Device1# 
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#interface f0/0
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#no ip address 192.168.23.3  255.255.255.0 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#shutdown
Device1(config-if)#shutdown 
Device1(config-if)#shutdown 
Device1(config-if)#shutdown 
Device1(config-if)#shutdown 
Device1(config-if)#shutdown 
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#</msg>
<msg timestamp="20170103 17:10:22.840" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 17:10:22.840" starttime="20170103 17:06:52.449"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 17:10:22.841" starttime="20170103 17:10:22.840"></status>
</kw>
<status status="PASS" endtime="20170103 17:10:22.841" starttime="20170103 17:06:52.448"></status>
</kw>
<status status="PASS" endtime="20170103 17:10:22.842" starttime="20170103 17:06:52.448"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address unconfigured in R1</arg>
</arguments>
<status status="PASS" endtime="20170103 17:10:22.842" starttime="20170103 17:10:22.842"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R2</arg>
<arg>${Links_of_R2}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R2</arg>
<arg>${Links_of_R2}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 17:13:47.735" level="INFO">
Device2# 
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#
Device2#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#
Device2(config)#interface f0/0
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#no ip address 192.168.23.2  255.255.255.0 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#shutdown
Device2(config-if)#shutdown 
Device2(config-if)#shutdown 
Device2(config-if)#shutdown 
Device2(config-if)#shutdown 
Device2(config-if)#shutdown 
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#
Device2(config-if)#</msg>
<msg timestamp="20170103 17:13:47.736" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 17:13:47.736" starttime="20170103 17:10:22.843"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 17:13:47.737" starttime="20170103 17:13:47.736"></status>
</kw>
<status status="PASS" endtime="20170103 17:13:47.737" starttime="20170103 17:10:22.842"></status>
</kw>
<status status="PASS" endtime="20170103 17:13:47.737" starttime="20170103 17:10:22.842"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address unconfigured in R2</arg>
</arguments>
<status status="PASS" endtime="20170103 17:13:47.738" starttime="20170103 17:13:47.738"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R3</arg>
<arg>${Links_of_R3}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R3</arg>
<arg>${Links_of_R3}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 17:17:13.547" level="INFO">
Device3# 
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#
Device3#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#
Device3(config)#interface f0/1
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#no ip address 192.168.34.4  255.255.255.0 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#shutdown
Device3(config-if)#shutdown 
Device3(config-if)#shutdown 
Device3(config-if)#shutdown 
Device3(config-if)#shutdown 
Device3(config-if)#shutdown 
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#
Device3(config-if)#</msg>
<msg timestamp="20170103 17:17:13.548" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 17:17:13.548" starttime="20170103 17:13:47.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 17:17:13.549" starttime="20170103 17:17:13.548"></status>
</kw>
<status status="PASS" endtime="20170103 17:17:13.549" starttime="20170103 17:13:47.738"></status>
</kw>
<status status="PASS" endtime="20170103 17:17:13.550" starttime="20170103 17:13:47.738"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address unconfigured in R3</arg>
</arguments>
<status status="PASS" endtime="20170103 17:17:13.550" starttime="20170103 17:17:13.550"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R4</arg>
<arg>${Links_of_R4}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R4</arg>
<arg>${Links_of_R4}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 17:18:34.435" level="INFO">
Device4# 
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#
Device4#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#
Device4(config)#interface f0/0
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#no ip address 192.168.12.1  255.255.255.0 
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#shutdown
Device4(config-if)#shutdown 
Device4(config-if)#shutdown 
Device4(config-if)#shutdown 
Device4(config-if)#shutdown 
Device4(config-if)#shutdown 
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#
Device4(config-if)#</msg>
<msg timestamp="20170103 17:18:34.435" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 17:18:34.436" starttime="20170103 17:17:13.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 17:18:34.437" starttime="20170103 17:18:34.436"></status>
</kw>
<status status="PASS" endtime="20170103 17:18:34.437" starttime="20170103 17:17:13.551"></status>
</kw>
<status status="PASS" endtime="20170103 17:18:34.437" starttime="20170103 17:17:13.550"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address unconfigured in R4</arg>
</arguments>
<status status="PASS" endtime="20170103 17:18:34.438" starttime="20170103 17:18:34.438"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Configuring IP_Address</arg>
<arg>R5</arg>
<arg>${Links_of_R5}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Configuring IP_Address" library="Resource">
<arguments>
<arg>R5</arg>
<arg>${Links_of_R5}</arg>
<arg>unconfigure</arg>
</arguments>
<kw name="Set IP" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${links}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 17:19:55.516" level="INFO">
Device5# 
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#
Device5#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#
Device5(config)#interface f0/0
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#no ip address 192.168.45.5  255.255.255.0 
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#shutdown
Device5(config-if)#shutdown 
Device5(config-if)#shutdown 
Device5(config-if)#shutdown 
Device5(config-if)#shutdown 
Device5(config-if)#shutdown 
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#
Device5(config-if)#</msg>
<msg timestamp="20170103 17:19:55.516" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 17:19:55.516" starttime="20170103 17:18:34.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring IP Address on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 17:19:55.518" starttime="20170103 17:19:55.516"></status>
</kw>
<status status="PASS" endtime="20170103 17:19:55.518" starttime="20170103 17:18:34.438"></status>
</kw>
<status status="PASS" endtime="20170103 17:19:55.518" starttime="20170103 17:18:34.438"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>IP_Address unconfigured in R5</arg>
</arguments>
<status status="PASS" endtime="20170103 17:19:55.518" starttime="20170103 17:19:55.518"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Unsetting loopback interface</arg>
</arguments>
<status status="PASS" endtime="20170103 17:19:55.519" starttime="20170103 17:19:55.519"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Devices}</arg>
</arguments>
<status status="PASS" endtime="20170103 17:19:55.519" starttime="20170103 17:19:55.519"></status>
</kw>
<kw type="for" name="${ELEMENT} IN [ @{Devices} ]">
<kw type="foritem" name="${ELEMENT} = R1">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170103 17:19:55.520" starttime="20170103 17:19:55.520"></status>
</kw>
<kw name="Setting Loopback interface" library="Resource">
<arguments>
<arg>${ELEMENT}</arg>
<arg>unset</arg>
</arguments>
<kw name="Set Loopback" library="Devices">
<arguments>
<arg>${device}</arg>
<arg>${action}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170103 17:21:16.238" level="INFO">
Device1# 
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#
Device1(config)#interface loopback0
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#ip address 127.0.0.1 255.255.255.255
Not a valid host address - 127.0.0.1
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#
Device1(config-if)#end
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#
Device1#</msg>
<msg timestamp="20170103 17:21:16.238" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170103 17:21:16.239" starttime="20170103 17:19:55.520"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Configuring Loopback IP on ${device} has failed</arg>
</arguments>
<status status="PASS" endtime="20170103 17:21:16.240" starttime="20170103 17:21:16.239"></status>
</kw>
<status status="PASS" endtime="20170103 17:21:16.240" starttime="20170103 17:19:55.520"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loopback_address unset in ${ELEMENT}</arg>
</arguments>
<status status="PASS" endtime="20170103 17:21:16.241" starttime="20170103 17:21:16.240"></status>
</kw>
<status status="PASS" endtime="20170103 17:21:16.241" starttime="20170103 17:19:55.520">